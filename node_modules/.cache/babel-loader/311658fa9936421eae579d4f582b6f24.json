{"ast":null,"code":"/**\n * Report a click through event. A click through event is when a user\n * clicks on a result within an autocomplete Dropdown.\n *\n * @param documentId String The document ID associated with result that was\n * clicked\n * @param tag Array[String] Optional Tags which can be used to categorize\n * this click event\n */\nexport default function trackAutocompleteClickThrough(documentId) {\n  var tags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (this.debug) {\n    var _console; // eslint-disable-next-line no-console\n\n\n    (_console = console).log.apply(_console, [\"Search UI: Action\", \"trackAutocompleteClickThrough\"].concat(Array.prototype.slice.call(arguments)));\n  }\n\n  var _this$state = this.state,\n      autocompletedResultsRequestId = _this$state.autocompletedResultsRequestId,\n      searchTerm = _this$state.searchTerm;\n  this.events.autocompleteResultClick({\n    query: searchTerm,\n    documentId: documentId,\n    requestId: autocompletedResultsRequestId,\n    tags: tags\n  });\n}","map":{"version":3,"sources":["../../src/actions/trackAutocompleteClickThrough.js"],"names":["tags","autocompletedResultsRequestId","searchTerm","query","documentId","requestId"],"mappings":"AAAA;;;;;;;;;AASA,eAAe,SAAA,6BAAA,CAAA,UAAA,EAA8D;AAAA,MAAXA,IAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;;AAC3E,MAAI,KAAJ,KAAA,EAAgB;AAAA,QAAA,QAAA,CAAA,CACd;;;AACA,KAAA,QAAA,GAAA,OAAA,EAAA,GAAA,CAAA,KAAA,CAAA,QAAA,EAAA,CAAA,mBAAA,EAAA,+BAAA,EAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA;AAKD;;AAR0E,MAAA,WAAA,GAUrB,KAVqB,KAAA;AAAA,MAUnEC,6BAVmE,GAAA,WAAA,CAAA,6BAAA;AAAA,MAUpCC,UAVoC,GAAA,WAAA,CAAA,UAAA;AAY3E,OAAA,MAAA,CAAA,uBAAA,CAAoC;AAClCC,IAAAA,KAAK,EAD6B,UAAA;AAElCC,IAAAA,UAAU,EAFwB,UAAA;AAGlCC,IAAAA,SAAS,EAHyB,6BAAA;AAIlCL,IAAAA,IAAI,EAAJA;AAJkC,GAApC;AAMD","sourcesContent":["/**\n * Report a click through event. A click through event is when a user\n * clicks on a result within an autocomplete Dropdown.\n *\n * @param documentId String The document ID associated with result that was\n * clicked\n * @param tag Array[String] Optional Tags which can be used to categorize\n * this click event\n */\nexport default function trackAutocompleteClickThrough(documentId, tags = []) {\n  if (this.debug) {\n    // eslint-disable-next-line no-console\n    console.log(\n      \"Search UI: Action\",\n      \"trackAutocompleteClickThrough\",\n      ...arguments\n    );\n  }\n\n  const { autocompletedResultsRequestId, searchTerm } = this.state;\n\n  this.events.autocompleteResultClick({\n    query: searchTerm,\n    documentId,\n    requestId: autocompletedResultsRequestId,\n    tags\n  });\n}\n"]},"metadata":{},"sourceType":"module"}