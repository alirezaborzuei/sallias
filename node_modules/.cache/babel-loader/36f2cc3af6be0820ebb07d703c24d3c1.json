{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AB\\\\Desktop\\\\work\\\\sallis\\\\src\\\\component\\\\Login.js\";\nimport React, { Component } from 'react';\nimport validator from 'validator';\nimport axios from 'axios';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    if (this.props.auth) {\n      this.props.history.push('/');\n    }\n\n    this.state = {\n      fields: {\n        email: '',\n        password: ''\n      },\n      errors: {}\n    };\n  }\n\n  handleValidation(callback) {\n    let {\n      fields\n    } = this.state;\n    let errors = {};\n    let formIsValid = true; // Email\n\n    if (validator.isEmpty(fields.email)) {\n      formIsValid = false;\n      errors[\"email\"] = \"فیلد ایمیل نمیتواند خالی بماند\";\n    } else if (!validator.isEmail(fields.email)) {\n      formIsValid = false;\n      errors[\"email\"] = \"فرمت ایمیل اشتباه است\";\n    } // Email\n\n\n    if (validator.isEmpty(fields.password)) {\n      formIsValid = false;\n      errors[\"password\"] = \"فیلد پسورد نمیتواند خالی بماند\";\n    } else if (!validator.isLength(fields.password, {\n      min: 6,\n      max: undefined\n    })) {\n      formIsValid = false;\n      errors[\"password\"] = \"فرمت ایمیل اشتباه است\";\n    }\n\n    this.setState({\n      errors\n    }, () => {\n      return callback(formIsValid);\n    });\n  }\n\n  handleChange(event) {\n    let fields = this.state.fields;\n    let target = event.target;\n    fields[target.name] = target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  handleRequest() {\n    const {\n      email,\n      password\n    } = this.state.fields;\n    let data = new FormData();\n    data.append('email', email);\n    data.append('password', password);\n    axios.post('http://roocket.org/api/login', data).then(response => {\n      localStorage.setItem('api_token', response.data.data.api_token);\n      this.props.login();\n      this.props.history.push('/');\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.handleValidation(valid => {\n      if (valid) this.handleRequest();\n    });\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state.fields;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Login Form\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      className: \"col-lg-5\",\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, \"Email : \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: [\"form-control\", errors[\"email\"] ? 'is-invalid' : ''].join(' '),\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange.bind(this),\n      placeholder: \"Please enter your email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"invalid-feedback rtl\",\n      style: {\n        display: errors[\"email\"] ? 'block' : 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, errors[\"email\"])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"Password : \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: [\"form-control\", errors[\"password\"] ? 'is-invalid' : ''].join(' '),\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange.bind(this),\n      placeholder: \"Please enter your password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"invalid-feedback rtl\",\n      style: {\n        display: errors[\"password\"] ? 'block' : 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, errors[\"password\"])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, \"Login\"))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/AB/Desktop/work/sallis/src/component/Login.js"],"names":["React","Component","validator","axios","Login","constructor","props","auth","history","push","state","fields","email","password","errors","handleValidation","callback","formIsValid","isEmpty","isEmail","isLength","min","max","undefined","setState","handleChange","event","target","name","value","handleRequest","data","FormData","append","post","then","response","localStorage","setItem","api_token","login","catch","error","console","log","handleSubmit","preventDefault","valid","render","bind","marginTop","join","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport validator from 'validator';\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if(this.props.auth) {\r\n            this.props.history.push('/')\r\n        }\r\n\r\n        this.state = {\r\n            fields : {\r\n                email : '',\r\n                password : ''\r\n            },\r\n            errors : {}\r\n        }\r\n    }\r\n\r\n    handleValidation(callback) {\r\n        let { fields } = this.state;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        // Email\r\n        if(validator.isEmpty(fields.email)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"فیلد ایمیل نمیتواند خالی بماند\";\r\n        } else if(! validator.isEmail(fields.email)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"فرمت ایمیل اشتباه است\";\r\n        }\r\n\r\n        // Email\r\n        if(validator.isEmpty(fields.password)) {\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"فیلد پسورد نمیتواند خالی بماند\";\r\n        } else if(! validator.isLength(fields.password , { min : 6 , max : undefined})) {\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"فرمت ایمیل اشتباه است\";\r\n        }\r\n\r\n        this.setState({ errors },() => {\r\n            return callback(formIsValid)\r\n        });\r\n\r\n    }\r\n    handleChange(event) {\r\n        let fields = this.state.fields;\r\n        let target = event.target;\r\n        fields[target.name] = target.value;\r\n        this.setState({fields});\r\n    }\r\n\r\n    handleRequest() {\r\n        const { email , password } = this.state.fields;\r\n\r\n        let data = new FormData();\r\n        data.append('email' , email);\r\n        data.append('password' , password);\r\n\r\n        axios.post('http://roocket.org/api/login' , data)\r\n            .then(response => {\r\n                localStorage.setItem('api_token' , response.data.data.api_token);\r\n                this.props.login();\r\n                this.props.history.push('/')\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        this.handleValidation((valid) => {\r\n            if(valid) this.handleRequest()\r\n        })\r\n    }\r\n    render() {\r\n        const {email , password} = this.state.fields;\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <h2>Login Form</h2>\r\n                <form onSubmit={this.handleSubmit.bind(this)} className=\"col-lg-5\" style={{ marginTop : 20}}>\r\n                    <div className=\"form-group\">\r\n                        <label>Email : </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={[\"form-control\" , errors[\"email\"] ? 'is-invalid' : ''].join(' ')}\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={this.handleChange.bind(this)}\r\n                            placeholder=\"Please enter your email\"/>\r\n                        <span className=\"invalid-feedback rtl\" style={{ display : errors[\"email\"] ? 'block' : 'none'}}>{errors[\"email\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password : </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className={[\"form-control\" , errors[\"password\"] ? 'is-invalid' : ''].join(' ')}\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={this.handleChange.bind(this)}\r\n                            placeholder=\"Please enter your password\"/>\r\n                        <span className=\"invalid-feedback rtl\" style={{ display : errors[\"password\"] ? 'block' : 'none'}}>{errors[\"password\"]}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-danger\" type=\"submit\">Login</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}