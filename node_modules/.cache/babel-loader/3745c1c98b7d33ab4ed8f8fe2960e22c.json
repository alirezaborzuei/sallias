{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FacetValue } from \"./types\";\nimport { appendClassName, getFilterValueDisplay } from \"./view-helpers\";\n\nfunction MultiCheckboxFacet(_ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      onMoreClick = _ref.onMoreClick,\n      onRemove = _ref.onRemove,\n      onSelect = _ref.onSelect,\n      options = _ref.options,\n      showMore = _ref.showMore,\n      showSearch = _ref.showSearch,\n      onSearch = _ref.onSearch,\n      searchPlaceholder = _ref.searchPlaceholder;\n  return /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: appendClassName(\"sui-facet\", className)\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    className: \"sui-facet__title\"\n  }, label), showSearch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-facet-search\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"sui-facet-search__text-input\",\n    type: \"search\",\n    placeholder: searchPlaceholder || \"Search\",\n    onChange: function onChange(e) {\n      onSearch(e.target.value);\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-multi-checkbox-facet\"\n  }, options.length < 1 && /*#__PURE__*/React.createElement(\"div\", null, \"No matching options\"), options.map(function (option) {\n    var checked = option.selected;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      key: \"\".concat(getFilterValueDisplay(option.value)),\n      htmlFor: \"example_facet_\".concat(label).concat(getFilterValueDisplay(option.value)),\n      className: \"sui-multi-checkbox-facet__option-label\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sui-multi-checkbox-facet__option-input-wrapper\"\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"example_facet_\".concat(label).concat(getFilterValueDisplay(option.value)),\n      type: \"checkbox\",\n      className: \"sui-multi-checkbox-facet__checkbox\",\n      checked: checked,\n      onChange: function onChange() {\n        return checked ? onRemove(option.value) : onSelect(option.value);\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sui-multi-checkbox-facet__input-text\"\n    }, getFilterValueDisplay(option.value))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sui-multi-checkbox-facet__option-count\"\n    }, option.count.toLocaleString(\"en\")));\n  })), showMore && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"sui-facet-view-more\",\n    onClick: onMoreClick,\n    \"aria-label\": \"Show more options\"\n  }, \"+ More\"));\n}\n\nMultiCheckboxFacet.propTypes = {\n  label: PropTypes.string.isRequired,\n  onMoreClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onSearch: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  showMore: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  showSearch: PropTypes.bool,\n  searchPlaceholder: PropTypes.string\n};\nexport default MultiCheckboxFacet;","map":{"version":3,"sources":["../src/MultiCheckboxFacet.js"],"names":["className","label","onMoreClick","onRemove","onSelect","options","showMore","showSearch","onSearch","searchPlaceholder","appendClassName","e","checked","option","getFilterValueDisplay","MultiCheckboxFacet","PropTypes","string"],"mappings":"AAAA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,SAAA,UAAA,QAAA,SAAA;AACA,SAAA,eAAA,EAAA,qBAAA,QAAA,gBAAA;;AAEA,SAAA,kBAAA,CAAA,IAAA,EAWG;AAAA,MAVDA,SAUC,GAAA,IAAA,CAVDA,SAUC;AAAA,MATDC,KASC,GAAA,IAAA,CATDA,KASC;AAAA,MARDC,WAQC,GAAA,IAAA,CARDA,WAQC;AAAA,MAPDC,QAOC,GAAA,IAAA,CAPDA,QAOC;AAAA,MANDC,QAMC,GAAA,IAAA,CANDA,QAMC;AAAA,MALDC,OAKC,GAAA,IAAA,CALDA,OAKC;AAAA,MAJDC,QAIC,GAAA,IAAA,CAJDA,QAIC;AAAA,MAHDC,UAGC,GAAA,IAAA,CAHDA,UAGC;AAAA,MAFDC,QAEC,GAAA,IAAA,CAFDA,QAEC;AAAA,MADDC,iBACC,GAAA,IAAA,CADDA,iBACC;AACD,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAU,IAAA,SAAS,EAAEC,eAAe,CAAA,WAAA,EAAA,SAAA;AAApC,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,SAAS,EAAC;AAAlB,GAAA,EADF,KACE,CADF,EAGGH,UAAU,IAAA,aACT,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,SAAS,EADX,8BAAA;AAEE,IAAA,IAAI,EAFN,QAAA;AAGE,IAAA,WAAW,EAAEE,iBAAiB,IAHhC,QAAA;AAIE,IAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,CAAA,EAAK;AACbD,MAAAA,QAAQ,CAACG,CAAC,CAADA,MAAAA,CAATH,KAAQ,CAARA;AACD;AANH,GAAA,CADF,CAJJ,EAAA,aAgBE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACGH,OAAO,CAAPA,MAAAA,GAAAA,CAAAA,IAAAA,aAAsB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EADzB,qBACyB,CADzB,EAEG,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAU;AACrB,QAAMO,OAAO,GAAGC,MAAM,CAAtB,QAAA;AACA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,MAAA,GAAG,EAAA,GAAA,MAAA,CAAKC,qBAAqB,CAACD,MAAM,CADtC,KAC+B,CAA1B,CADL;AAEE,MAAA,OAAO,EAAA,iBAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAA2BC,qBAAqB,CACrDD,MAAM,CAHV,KAEyD,CAAhD,CAFT;AAKE,MAAA,SAAS,EAAC;AALZ,KAAA,EAAA,aAOE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAC;AAAf,KAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,MAAA,EAAE,EAAA,iBAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAA2BC,qBAAqB,CAChDD,MAAM,CAFV,KACoD,CAAhD,CADJ;AAIE,MAAA,IAAI,EAJN,UAAA;AAKE,MAAA,SAAS,EALX,oCAAA;AAME,MAAA,OAAO,EANT,OAAA;AAOE,MAAA,QAAQ,EAAE,SAAA,QAAA,GAAA;AAAA,eACRD,OAAO,GAAGT,QAAQ,CAACU,MAAM,CAAlB,KAAW,CAAX,GAA4BT,QAAQ,CAACS,MAAM,CAD1C,KACmC,CADnC;AAAA;AAPZ,KAAA,CADF,EAAA,aAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAC;AAAhB,KAAA,EACGC,qBAAqB,CAACD,MAAM,CApBnC,KAoB4B,CADxB,CAZF,CAPF,EAAA,aAuBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAC;AAAhB,KAAA,EACGA,MAAM,CAANA,KAAAA,CAAAA,cAAAA,CAzBP,IAyBOA,CADH,CAvBF,CADF;AApBN,GAkBK,CAFH,CAhBF,EAoDGP,QAAQ,IAAA,aACP,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,IAAA,IAAI,EADN,QAAA;AAEE,IAAA,SAAS,EAFX,qBAAA;AAGE,IAAA,OAAO,EAHT,WAAA;AAIE,kBAAW;AAJb,GAAA,EAtDN,QAsDM,CArDJ,CADF;AAiED;;AAEDS,kBAAkB,CAAlBA,SAAAA,GAA+B;AAC7Bd,EAAAA,KAAK,EAAEe,SAAS,CAATA,MAAAA,CADsB,UAAA;AAE7Bd,EAAAA,WAAW,EAAEc,SAAS,CAATA,IAAAA,CAFgB,UAAA;AAG7Bb,EAAAA,QAAQ,EAAEa,SAAS,CAATA,IAAAA,CAHmB,UAAA;AAI7BZ,EAAAA,QAAQ,EAAEY,SAAS,CAATA,IAAAA,CAJmB,UAAA;AAK7BR,EAAAA,QAAQ,EAAEQ,SAAS,CAATA,IAAAA,CALmB,UAAA;AAM7BX,EAAAA,OAAO,EAAEW,SAAS,CAATA,OAAAA,CAAAA,UAAAA,EANoB,UAAA;AAO7BV,EAAAA,QAAQ,EAAEU,SAAS,CAATA,IAAAA,CAPmB,UAAA;AAQ7BhB,EAAAA,SAAS,EAAEgB,SAAS,CARS,MAAA;AAS7BT,EAAAA,UAAU,EAAES,SAAS,CATQ,IAAA;AAU7BP,EAAAA,iBAAiB,EAAEO,SAAS,CAACC;AAVA,CAA/BF;AAaA,eAAA,kBAAA","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { FacetValue } from \"./types\";\nimport { appendClassName, getFilterValueDisplay } from \"./view-helpers\";\n\nfunction MultiCheckboxFacet({\n  className,\n  label,\n  onMoreClick,\n  onRemove,\n  onSelect,\n  options,\n  showMore,\n  showSearch,\n  onSearch,\n  searchPlaceholder\n}) {\n  return (\n    <fieldset className={appendClassName(\"sui-facet\", className)}>\n      <legend className=\"sui-facet__title\">{label}</legend>\n\n      {showSearch && (\n        <div className=\"sui-facet-search\">\n          <input\n            className=\"sui-facet-search__text-input\"\n            type=\"search\"\n            placeholder={searchPlaceholder || \"Search\"}\n            onChange={e => {\n              onSearch(e.target.value);\n            }}\n          />\n        </div>\n      )}\n\n      <div className=\"sui-multi-checkbox-facet\">\n        {options.length < 1 && <div>No matching options</div>}\n        {options.map(option => {\n          const checked = option.selected;\n          return (\n            <label\n              key={`${getFilterValueDisplay(option.value)}`}\n              htmlFor={`example_facet_${label}${getFilterValueDisplay(\n                option.value\n              )}`}\n              className=\"sui-multi-checkbox-facet__option-label\"\n            >\n              <div className=\"sui-multi-checkbox-facet__option-input-wrapper\">\n                <input\n                  id={`example_facet_${label}${getFilterValueDisplay(\n                    option.value\n                  )}`}\n                  type=\"checkbox\"\n                  className=\"sui-multi-checkbox-facet__checkbox\"\n                  checked={checked}\n                  onChange={() =>\n                    checked ? onRemove(option.value) : onSelect(option.value)\n                  }\n                />\n                <span className=\"sui-multi-checkbox-facet__input-text\">\n                  {getFilterValueDisplay(option.value)}\n                </span>\n              </div>\n              <span className=\"sui-multi-checkbox-facet__option-count\">\n                {option.count.toLocaleString(\"en\")}\n              </span>\n            </label>\n          );\n        })}\n      </div>\n\n      {showMore && (\n        <button\n          type=\"button\"\n          className=\"sui-facet-view-more\"\n          onClick={onMoreClick}\n          aria-label=\"Show more options\"\n        >\n          + More\n        </button>\n      )}\n    </fieldset>\n  );\n}\n\nMultiCheckboxFacet.propTypes = {\n  label: PropTypes.string.isRequired,\n  onMoreClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onSearch: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  showMore: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  showSearch: PropTypes.bool,\n  searchPlaceholder: PropTypes.string\n};\n\nexport default MultiCheckboxFacet;\n"]},"metadata":{},"sourceType":"module"}