{"ast":null,"code":"import { announceToScreenReader } from \"../A11yNotifications\";\n/**\n * Announces a specific message in `a11yNotificationMessages`\n * to Search UI's screen reader live region.\n *\n * @param {string} messageFunc - key of a message function in `a11yNotificationMessages`\n * @param {object} [messageArgs] - arguments to pass to the message function, if any\n */\n\nexport default function a11yNotify(messageFunc, messageArgs) {\n  if (!this.hasA11yNotifications) return;\n  var getMessage = this.a11yNotificationMessages[messageFunc];\n\n  if (!getMessage) {\n    var errorMessage = \"Could not find corresponding message function in a11yNotificationMessages: \\\"\".concat(messageFunc, \"\\\"\");\n    console.warn(\"Action\", \"a11yNotify\", errorMessage);\n    return;\n  }\n\n  var message = getMessage(messageArgs);\n  announceToScreenReader(message);\n\n  if (this.debug) {\n    // eslint-disable-next-line no-console\n    console.log(\"Search UI: Action\", \"a11yNotify\", {\n      messageFunc: messageFunc,\n      messageArgs: messageArgs,\n      message: message\n    });\n  }\n}","map":{"version":3,"sources":["../../src/actions/a11yNotify.js"],"names":["getMessage","errorMessage","console","message","announceToScreenReader","messageFunc","messageArgs"],"mappings":"AAAA,SAAA,sBAAA,QAAA,sBAAA;AAEA;;;;;;;;AAOA,eAAe,SAAA,UAAA,CAAA,WAAA,EAAA,WAAA,EAA8C;AAC3D,MAAI,CAAC,KAAL,oBAAA,EAAgC;AAEhC,MAAMA,UAAU,GAAG,KAAA,wBAAA,CAAnB,WAAmB,CAAnB;;AAEA,MAAI,CAAJ,UAAA,EAAiB;AACf,QAAMC,YAAY,GAAA,gFAAA,MAAA,CAAA,WAAA,EAAlB,IAAkB,CAAlB;AACAC,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,QAAAA,EAAAA,YAAAA,EAAAA,YAAAA;AACA;AACD;;AAED,MAAMC,OAAO,GAAGH,UAAU,CAA1B,WAA0B,CAA1B;AACAI,EAAAA,sBAAsB,CAAtBA,OAAsB,CAAtBA;;AAEA,MAAI,KAAJ,KAAA,EAAgB;AACd;AACAF,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,mBAAAA,EAAAA,YAAAA,EAA+C;AAC7CG,MAAAA,WAAW,EADkC,WAAA;AAE7CC,MAAAA,WAAW,EAFkC,WAAA;AAG7CH,MAAAA,OAAO,EAAPA;AAH6C,KAA/CD;AAKD;AACF","sourcesContent":["import { announceToScreenReader } from \"../A11yNotifications\";\n\n/**\n * Announces a specific message in `a11yNotificationMessages`\n * to Search UI's screen reader live region.\n *\n * @param {string} messageFunc - key of a message function in `a11yNotificationMessages`\n * @param {object} [messageArgs] - arguments to pass to the message function, if any\n */\nexport default function a11yNotify(messageFunc, messageArgs) {\n  if (!this.hasA11yNotifications) return;\n\n  const getMessage = this.a11yNotificationMessages[messageFunc];\n\n  if (!getMessage) {\n    const errorMessage = `Could not find corresponding message function in a11yNotificationMessages: \"${messageFunc}\"`;\n    console.warn(\"Action\", \"a11yNotify\", errorMessage);\n    return;\n  }\n\n  const message = getMessage(messageArgs);\n  announceToScreenReader(message);\n\n  if (this.debug) {\n    // eslint-disable-next-line no-console\n    console.log(\"Search UI: Action\", \"a11yNotify\", {\n      messageFunc,\n      messageArgs,\n      message\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}