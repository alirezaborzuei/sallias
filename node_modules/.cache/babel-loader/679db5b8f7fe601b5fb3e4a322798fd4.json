{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Result } from \"./types\";\nimport { Suggestion } from \"./types\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction getRaw(result, value) {\n  if (!result[value] || !result[value].raw) return;\n  return result[value].raw;\n}\n\nfunction getSnippet(result, value) {\n  if (!result[value] || !result[value].snippet) return;\n  return result[value].snippet;\n}\n\nfunction getSuggestionTitle(suggestionType, autocompleteSuggestions) {\n  if (autocompleteSuggestions.sectionTitle) {\n    return autocompleteSuggestions.sectionTitle;\n  }\n\n  if (autocompleteSuggestions[suggestionType] && autocompleteSuggestions[suggestionType].sectionTitle) {\n    return autocompleteSuggestions[suggestionType].sectionTitle;\n  }\n}\n\nfunction Autocomplete(_ref) {\n  var autocompleteResults = _ref.autocompleteResults,\n      autocompletedResults = _ref.autocompletedResults,\n      autocompleteSuggestions = _ref.autocompleteSuggestions,\n      autocompletedSuggestions = _ref.autocompletedSuggestions,\n      className = _ref.className,\n      getItemProps = _ref.getItemProps,\n      getMenuProps = _ref.getMenuProps;\n  var index = 0;\n  return /*#__PURE__*/React.createElement(\"div\", getMenuProps({\n    className: appendClassName(\"sui-search-box__autocomplete-container\", className)\n  }), /*#__PURE__*/React.createElement(\"div\", null, !!autocompleteSuggestions && Object.entries(autocompletedSuggestions).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        suggestionType = _ref3[0],\n        suggestions = _ref3[1];\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: suggestionType\n    }, getSuggestionTitle(suggestionType, autocompleteSuggestions) && suggestions.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sui-search-box__section-title\"\n    }, getSuggestionTitle(suggestionType, autocompleteSuggestions)), suggestions.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"sui-search-box__suggestion-list\"\n    }, suggestions.map(function (suggestion) {\n      index++;\n      return (\n        /*#__PURE__*/\n        // eslint-disable-next-line react/jsx-key\n        React.createElement(\"li\", getItemProps({\n          key: suggestion.suggestion || suggestion.highlight,\n          index: index - 1,\n          item: suggestion\n        }), suggestion.highlight ? /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: suggestion.highlight\n          }\n        }) : /*#__PURE__*/React.createElement(\"span\", null, suggestion.suggestion))\n      );\n    })));\n  }), !!autocompleteResults && !!autocompletedResults && autocompletedResults.length > 0 && autocompleteResults.sectionTitle && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-search-box__section-title\"\n  }, autocompleteResults.sectionTitle), !!autocompleteResults && !!autocompletedResults && autocompletedResults.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"sui-search-box__results-list\"\n  }, autocompletedResults.map(function (result) {\n    index++;\n    var titleSnippet = getSnippet(result, autocompleteResults.titleField);\n    var titleRaw = getRaw(result, autocompleteResults.titleField);\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/jsx-key\n      React.createElement(\"li\", getItemProps({\n        key: result.id.raw,\n        index: index - 1,\n        item: result\n      }), titleSnippet ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: titleSnippet\n        }\n      }) : /*#__PURE__*/React.createElement(\"span\", null, titleRaw))\n    );\n  }))));\n}\n\nAutocomplete.propTypes = {\n  allAutocompletedItemsCount: PropTypes.number.isRequired,\n  autocompleteResults: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    titleField: PropTypes.string.isRequired,\n    urlField: PropTypes.string.isRequired,\n    linkTarget: PropTypes.string,\n    sectionTitle: PropTypes.string\n  })]),\n  autocompletedResults: PropTypes.arrayOf(Result).isRequired,\n  autocompletedSuggestions: PropTypes.objectOf(PropTypes.arrayOf(Suggestion)).isRequired,\n  autocompletedSuggestionsCount: PropTypes.number.isRequired,\n  autocompleteSuggestions: PropTypes.oneOfType([PropTypes.bool, PropTypes.exact({\n    sectionTitle: PropTypes.string\n  }), PropTypes.objectOf(PropTypes.exact({\n    sectionTitle: PropTypes.string\n  }))]),\n  getItemProps: PropTypes.func.isRequired,\n  getMenuProps: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\nexport default Autocomplete;","map":{"version":3,"sources":["../src/Autocomplete.js"],"names":["result","autocompleteSuggestions","autocompleteResults","autocompletedResults","autocompletedSuggestions","className","getItemProps","getMenuProps","index","appendClassName","suggestionType","suggestions","getSuggestionTitle","key","suggestion","item","__html","highlight","titleSnippet","getSnippet","titleRaw","getRaw","Autocomplete","allAutocompletedItemsCount","PropTypes","titleField","urlField","linkTarget","sectionTitle","string","autocompletedSuggestionsCount"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { Result } from \"./types\";\nimport { Suggestion } from \"./types\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction getRaw(result, value) {\n  if (!result[value] || !result[value].raw) return;\n  return result[value].raw;\n}\n\nfunction getSnippet(result, value) {\n  if (!result[value] || !result[value].snippet) return;\n  return result[value].snippet;\n}\n\nfunction getSuggestionTitle(suggestionType, autocompleteSuggestions) {\n  if (autocompleteSuggestions.sectionTitle) {\n    return autocompleteSuggestions.sectionTitle;\n  }\n\n  if (\n    autocompleteSuggestions[suggestionType] &&\n    autocompleteSuggestions[suggestionType].sectionTitle\n  ) {\n    return autocompleteSuggestions[suggestionType].sectionTitle;\n  }\n}\n\nfunction Autocomplete({\n  autocompleteResults,\n  autocompletedResults,\n  autocompleteSuggestions,\n  autocompletedSuggestions,\n  className,\n  getItemProps,\n  getMenuProps\n}) {\n  let index = 0;\n  return (\n    <div\n      {...getMenuProps({\n        className: appendClassName(\n          \"sui-search-box__autocomplete-container\",\n          className\n        )\n      })}\n    >\n      <div>\n        {!!autocompleteSuggestions &&\n          Object.entries(autocompletedSuggestions).map(\n            ([suggestionType, suggestions]) => {\n              return (\n                <React.Fragment key={suggestionType}>\n                  {getSuggestionTitle(\n                    suggestionType,\n                    autocompleteSuggestions\n                  ) &&\n                    suggestions.length > 0 && (\n                      <div className=\"sui-search-box__section-title\">\n                        {getSuggestionTitle(\n                          suggestionType,\n                          autocompleteSuggestions\n                        )}\n                      </div>\n                    )}\n                  {suggestions.length > 0 && (\n                    <ul className=\"sui-search-box__suggestion-list\">\n                      {suggestions.map(suggestion => {\n                        index++;\n                        return (\n                          // eslint-disable-next-line react/jsx-key\n                          <li\n                            {...getItemProps({\n                              key:\n                                suggestion.suggestion || suggestion.highlight,\n                              index: index - 1,\n                              item: suggestion\n                            })}\n                          >\n                            {suggestion.highlight ? (\n                              <span\n                                dangerouslySetInnerHTML={{\n                                  __html: suggestion.highlight\n                                }}\n                              />\n                            ) : (\n                              <span>{suggestion.suggestion}</span>\n                            )}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  )}\n                </React.Fragment>\n              );\n            }\n          )}\n        {!!autocompleteResults &&\n          !!autocompletedResults &&\n          autocompletedResults.length > 0 &&\n          autocompleteResults.sectionTitle && (\n            <div className=\"sui-search-box__section-title\">\n              {autocompleteResults.sectionTitle}\n            </div>\n          )}\n        {!!autocompleteResults &&\n          !!autocompletedResults &&\n          autocompletedResults.length > 0 && (\n            <ul className=\"sui-search-box__results-list\">\n              {autocompletedResults.map(result => {\n                index++;\n                const titleSnippet = getSnippet(\n                  result,\n                  autocompleteResults.titleField\n                );\n                const titleRaw = getRaw(result, autocompleteResults.titleField);\n                return (\n                  // eslint-disable-next-line react/jsx-key\n                  <li\n                    {...getItemProps({\n                      key: result.id.raw,\n                      index: index - 1,\n                      item: result\n                    })}\n                  >\n                    {titleSnippet ? (\n                      <span\n                        dangerouslySetInnerHTML={{\n                          __html: titleSnippet\n                        }}\n                      />\n                    ) : (\n                      <span>{titleRaw}</span>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n      </div>\n    </div>\n  );\n}\n\nAutocomplete.propTypes = {\n  allAutocompletedItemsCount: PropTypes.number.isRequired,\n  autocompleteResults: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      titleField: PropTypes.string.isRequired,\n      urlField: PropTypes.string.isRequired,\n      linkTarget: PropTypes.string,\n      sectionTitle: PropTypes.string\n    })\n  ]),\n  autocompletedResults: PropTypes.arrayOf(Result).isRequired,\n  autocompletedSuggestions: PropTypes.objectOf(PropTypes.arrayOf(Suggestion))\n    .isRequired,\n  autocompletedSuggestionsCount: PropTypes.number.isRequired,\n  autocompleteSuggestions: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.exact({\n      sectionTitle: PropTypes.string\n    }),\n    PropTypes.objectOf(\n      PropTypes.exact({\n        sectionTitle: PropTypes.string\n      })\n    )\n  ]),\n  getItemProps: PropTypes.func.isRequired,\n  getMenuProps: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}