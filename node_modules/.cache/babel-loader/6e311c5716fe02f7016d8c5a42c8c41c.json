{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport { SearchBox } from \"@elastic/react-search-ui-views\";\nimport { withSearch } from \"..\";\nimport { Result, Suggestion } from \"../types\";\nexport var SearchBoxContainer = /*#__PURE__*/function (_Component) {\n  _inherits(SearchBoxContainer, _Component);\n\n  var _super = _createSuper(SearchBoxContainer);\n\n  function SearchBoxContainer() {\n    var _this;\n\n    _classCallCheck(this, SearchBoxContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isFocused: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFocus\", function () {\n      _this.setState({\n        isFocused: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBlur\", function () {\n      _this.setState({\n        isFocused: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"completeSuggestion\", function (searchTerm) {\n      var _this$props = _this.props,\n          shouldClearFilters = _this$props.shouldClearFilters,\n          setSearchTerm = _this$props.setSearchTerm;\n      setSearchTerm(searchTerm, {\n        shouldClearFilters: shouldClearFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      var _this$props2 = _this.props,\n          shouldClearFilters = _this$props2.shouldClearFilters,\n          searchTerm = _this$props2.searchTerm,\n          setSearchTerm = _this$props2.setSearchTerm;\n      e.preventDefault();\n      setSearchTerm(searchTerm, {\n        shouldClearFilters: shouldClearFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (value) {\n      var _this$props3 = _this.props,\n          autocompleteMinimumCharacters = _this$props3.autocompleteMinimumCharacters,\n          autocompleteResults = _this$props3.autocompleteResults,\n          autocompleteSuggestions = _this$props3.autocompleteSuggestions,\n          shouldClearFilters = _this$props3.shouldClearFilters,\n          searchAsYouType = _this$props3.searchAsYouType,\n          setSearchTerm = _this$props3.setSearchTerm,\n          debounceLength = _this$props3.debounceLength;\n\n      var options = _objectSpread(_objectSpread({\n        autocompleteMinimumCharacters: autocompleteMinimumCharacters\n      }, (autocompleteResults || autocompleteSuggestions || searchAsYouType) && {\n        debounce: debounceLength || 200\n      }), {}, {\n        shouldClearFilters: shouldClearFilters,\n        refresh: !!searchAsYouType,\n        autocompleteResults: !!autocompleteResults,\n        autocompleteSuggestions: !!autocompleteSuggestions\n      });\n\n      setSearchTerm(value, options);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNotifyAutocompleteSelected\", function (selection) {\n      var _this$props4 = _this.props,\n          autocompleteResults = _this$props4.autocompleteResults,\n          trackAutocompleteClickThrough = _this$props4.trackAutocompleteClickThrough; // Because suggestions don't count as clickthroughs, only\n      // results\n\n      if (autocompleteResults && autocompleteResults.shouldTrackClickThrough !== false && !selection.suggestion) {\n        var _autocompleteResults$ = autocompleteResults.clickThroughTags,\n            clickThroughTags = _autocompleteResults$ === void 0 ? [] : _autocompleteResults$;\n        var id = selection.id.raw;\n        trackAutocompleteClickThrough(id, clickThroughTags);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"defaultOnSelectAutocomplete\", function (selection) {\n      var autocompleteResults = _this.props.autocompleteResults;\n\n      _this.handleNotifyAutocompleteSelected(selection);\n\n      if (!selection.suggestion) {\n        var url = selection[autocompleteResults.urlField] ? selection[autocompleteResults.urlField].raw : \"\";\n\n        if (url) {\n          var target = autocompleteResults.linkTarget || \"_self\";\n          window.open(url, target);\n        }\n      } else {\n        _this.completeSuggestion(selection.suggestion);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(SearchBoxContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isFocused = this.state.isFocused;\n\n      var _this$props5 = this.props,\n          autocompleteMinimumCharacters = _this$props5.autocompleteMinimumCharacters,\n          autocompleteResults = _this$props5.autocompleteResults,\n          autocompleteSuggestions = _this$props5.autocompleteSuggestions,\n          autocompletedResults = _this$props5.autocompletedResults,\n          autocompletedSuggestions = _this$props5.autocompletedSuggestions,\n          className = _this$props5.className,\n          autocompleteView = _this$props5.autocompleteView,\n          inputProps = _this$props5.inputProps,\n          inputView = _this$props5.inputView,\n          onSelectAutocomplete = _this$props5.onSelectAutocomplete,\n          onSubmit = _this$props5.onSubmit,\n          searchTerm = _this$props5.searchTerm,\n          view = _this$props5.view,\n          rest = _objectWithoutProperties(_this$props5, [\"autocompleteMinimumCharacters\", \"autocompleteResults\", \"autocompleteSuggestions\", \"autocompletedResults\", \"autocompletedSuggestions\", \"className\", \"autocompleteView\", \"inputProps\", \"inputView\", \"onSelectAutocomplete\", \"onSubmit\", \"searchTerm\", \"view\"]);\n\n      var View = view || SearchBox;\n      var useAutocomplete = (!!autocompleteResults || !!autocompleteSuggestions) && searchTerm.length >= autocompleteMinimumCharacters;\n      var autocompletedSuggestionsCount = Object.entries(autocompletedSuggestions // eslint-disable-next-line no-unused-vars\n      ).reduce(function (acc, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            _ = _ref2[0],\n            value = _ref2[1];\n\n        return acc + value.length;\n      }, 0);\n      var allAutocompletedItemsCount = autocompletedSuggestionsCount + autocompletedResults.length;\n      var handleOnSelectAutocomplete;\n\n      if (onSelectAutocomplete) {\n        handleOnSelectAutocomplete = function handleOnSelectAutocomplete(selection) {\n          onSelectAutocomplete(selection, {\n            notifyAutocompleteSelected: _this2.handleNotifyAutocompleteSelected,\n            completeSuggestion: _this2.completeSuggestion,\n            autocompleteResults: _this2.props.autocompleteResults\n          }, _this2.defaultOnSelectAutocomplete);\n        };\n      }\n\n      return View(_objectSpread({\n        allAutocompletedItemsCount: allAutocompletedItemsCount,\n        autocompleteView: autocompleteView,\n        autocompleteResults: autocompleteResults,\n        autocompleteSuggestions: autocompleteSuggestions,\n        autocompletedResults: autocompletedResults,\n        autocompletedSuggestions: autocompletedSuggestions,\n        className: className,\n        autocompletedSuggestionsCount: autocompletedSuggestionsCount,\n        completeSuggestion: this.completeSuggestion,\n        isFocused: isFocused,\n        notifyAutocompleteSelected: this.handleNotifyAutocompleteSelected,\n        onChange: function onChange(value) {\n          return _this2.handleChange(value);\n        },\n        onSelectAutocomplete: handleOnSelectAutocomplete || this.defaultOnSelectAutocomplete,\n        onSubmit: onSubmit ? function (e) {\n          e.preventDefault();\n          onSubmit(searchTerm);\n        } : this.handleSubmit,\n        useAutocomplete: useAutocomplete,\n        value: searchTerm,\n        inputProps: _objectSpread({\n          onFocus: this.handleFocus,\n          onBlur: this.handleBlur\n        }, inputProps),\n        inputView: inputView\n      }, rest));\n    }\n  }]);\n\n  return SearchBoxContainer;\n}(Component);\n\n_defineProperty(SearchBoxContainer, \"propTypes\", {\n  // Props\n  autocompleteMinimumCharacters: PropTypes.number,\n  autocompleteResults: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    clickThroughTags: PropTypes.arrayOf(PropTypes.string),\n    linkTarget: PropTypes.string,\n    sectionTitle: PropTypes.string,\n    shouldTrackClickThrough: PropTypes.bool,\n    titleField: PropTypes.string.isRequired,\n    urlField: PropTypes.string.isRequired\n  })]),\n  autocompleteSuggestions: PropTypes.oneOfType([PropTypes.bool, PropTypes.exact({\n    sectionTitle: PropTypes.string\n  }), PropTypes.objectOf(PropTypes.exact({\n    sectionTitle: PropTypes.string\n  }))]),\n  autocompleteView: PropTypes.func,\n  className: PropTypes.string,\n  shouldClearFilters: PropTypes.bool,\n  debounceLength: PropTypes.number,\n  inputProps: PropTypes.object,\n  inputView: PropTypes.func,\n  onSelectAutocomplete: PropTypes.func,\n  onSubmit: PropTypes.func,\n  searchAsYouType: PropTypes.bool,\n  view: PropTypes.func,\n  // State\n  autocompletedResults: PropTypes.arrayOf(Result).isRequired,\n  autocompletedSuggestions: PropTypes.objectOf(PropTypes.arrayOf(Suggestion)).isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  // Actions\n  setSearchTerm: PropTypes.func.isRequired,\n  trackAutocompleteClickThrough: PropTypes.func.isRequired\n});\n\n_defineProperty(SearchBoxContainer, \"defaultProps\", {\n  autocompleteMinimumCharacters: 0,\n  shouldClearFilters: true\n});\n\nexport default withSearch(function (_ref3) {\n  var autocompletedResults = _ref3.autocompletedResults,\n      autocompletedSuggestions = _ref3.autocompletedSuggestions,\n      searchTerm = _ref3.searchTerm,\n      setSearchTerm = _ref3.setSearchTerm,\n      trackAutocompleteClickThrough = _ref3.trackAutocompleteClickThrough;\n  return {\n    autocompletedResults: autocompletedResults,\n    autocompletedSuggestions: autocompletedSuggestions,\n    searchTerm: searchTerm,\n    setSearchTerm: setSearchTerm,\n    trackAutocompleteClickThrough: trackAutocompleteClickThrough\n  };\n})(SearchBoxContainer);","map":{"version":3,"sources":["../../src/containers/SearchBox.js"],"names":["SearchBoxContainer","autocompleteMinimumCharacters","PropTypes","autocompleteResults","clickThroughTags","linkTarget","sectionTitle","shouldTrackClickThrough","titleField","urlField","isRequired","autocompleteSuggestions","string","autocompleteView","className","shouldClearFilters","debounceLength","inputProps","inputView","onSelectAutocomplete","onSubmit","searchAsYouType","view","autocompletedResults","autocompletedSuggestions","searchTerm","setSearchTerm","trackAutocompleteClickThrough","isFocused","e","options","debounce","refresh","selection","id","url","target","window","rest","View","useAutocomplete","autocompletedSuggestionsCount","_","value","acc","allAutocompletedItemsCount","handleOnSelectAutocomplete","notifyAutocompleteSelected","completeSuggestion","onChange","onFocus","onBlur","handleBlur"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,SAAA,QAAA,OAAA;AACA,SAAA,SAAA,QAAA,gCAAA;AAEA,SAAA,UAAA,QAAA,IAAA;AACA,SAAA,MAAA,EAAA,UAAA,QAAA,UAAA;AAEA,OAAA,IAAaA,kBAAb,GAAA,aAAA,UAAA,UAAA,EAAA;AAAA,EAAA,SAAA,CAAA,kBAAA,EAAA,UAAA,CAAA;;AAAA,MAAA,MAAA,GAAA,YAAA,CAAA,kBAAA,CAAA;;AAAA,WAAA,kBAAA,GAAA;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,kBAAA,CAAA;;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAA,IAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAA,MAAA,IAAA,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;AAAA;;AAAA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,OAAA,EAmDU;AACN4B,MAAAA,SAAS,EAAE;AADL,KAnDV,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,aAAA,EAuDgB,YAAM;AAClB,MAAA,KAAA,CAAA,QAAA,CAAc;AACZA,QAAAA,SAAS,EAAE;AADC,OAAd;AAxDJ,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,YAAA,EA6De,YAAM;AACjB,MAAA,KAAA,CAAA,QAAA,CAAc;AACZA,QAAAA,SAAS,EAAE;AADC,OAAd;AA9DJ,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,oBAAA,EAmEuB,UAAA,UAAA,EAAc;AAAA,UAAA,WAAA,GACa,KAAA,CADb,KAAA;AAAA,UACzBb,kBADyB,GAAA,WAAA,CAAA,kBAAA;AAAA,UACLW,aADK,GAAA,WAAA,CAAA,aAAA;AAEjCA,MAAAA,aAAa,CAAA,UAAA,EAAa;AACxBX,QAAAA,kBAAkB,EAAlBA;AADwB,OAAb,CAAbW;AArEJ,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,cAAA,EA0EiB,UAAA,CAAA,EAAK;AAAA,UAAA,YAAA,GACwC,KAAA,CADxC,KAAA;AAAA,UACVX,kBADU,GAAA,YAAA,CAAA,kBAAA;AAAA,UACUU,UADV,GAAA,YAAA,CAAA,UAAA;AAAA,UACsBC,aADtB,GAAA,YAAA,CAAA,aAAA;AAGlBG,MAAAA,CAAC,CAADA,cAAAA;AACAH,MAAAA,aAAa,CAAA,UAAA,EAAa;AACxBX,QAAAA,kBAAkB,EAAlBA;AADwB,OAAb,CAAbW;AA9EJ,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,cAAA,EAmFiB,UAAA,KAAA,EAAS;AAAA,UAAA,YAAA,GASlB,KAAA,CATkB,KAAA;AAAA,UAEpBzB,6BAFoB,GAAA,YAAA,CAAA,6BAAA;AAAA,UAGpBE,mBAHoB,GAAA,YAAA,CAAA,mBAAA;AAAA,UAIpBQ,uBAJoB,GAAA,YAAA,CAAA,uBAAA;AAAA,UAKpBI,kBALoB,GAAA,YAAA,CAAA,kBAAA;AAAA,UAMpBM,eANoB,GAAA,YAAA,CAAA,eAAA;AAAA,UAOpBK,aAPoB,GAAA,YAAA,CAAA,aAAA;AAAA,UAQpBV,cARoB,GAAA,YAAA,CAAA,cAAA;;AAWtB,UAAMc,OAAO,GAAA,aAAA,CAAA,aAAA,CAAA;AACX7B,QAAAA,6BAA6B,EAA7BA;AADW,OAAA,EAEP,CAACE,mBAAmB,IAAnBA,uBAAAA,IAAD,eAAA,KAEkB;AACpB4B,QAAAA,QAAQ,EAAEf,cAAc,IAAI;AADR,OAJX,CAAA,EAAA,EAAA,EAAA;AAOXD,QAAAA,kBAAkB,EAPP,kBAAA;AAQXiB,QAAAA,OAAO,EAAE,CAAC,CARC,eAAA;AASX7B,QAAAA,mBAAmB,EAAE,CAAC,CATX,mBAAA;AAUXQ,QAAAA,uBAAuB,EAAE,CAAC,CAACA;AAVhB,OAAA,CAAb;;AAaAe,MAAAA,aAAa,CAAA,KAAA,EAAbA,OAAa,CAAbA;AA3GJ,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,kCAAA,EA8GqC,UAAA,SAAA,EAAa;AAAA,UAAA,YAAA,GACiB,KAAA,CADjB,KAAA;AAAA,UACtCvB,mBADsC,GAAA,YAAA,CAAA,mBAAA;AAAA,UACjBwB,6BADiB,GAAA,YAAA,CAAA,6BAAA,CAAA,CAE9C;AACA;;AACA,UACExB,mBAAmB,IACnBA,mBAAmB,CAAnBA,uBAAAA,KADAA,KAAAA,IAEA,CAAC8B,SAAS,CAHZ,UAAA,EAIE;AAAA,YAAA,qBAAA,GACkC9B,mBADlC,CAAA,gBAAA;AAAA,YACQC,gBADR,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAEA,YAAM8B,EAAE,GAAGD,SAAS,CAATA,EAAAA,CAAX,GAAA;AACAN,QAAAA,6BAA6B,CAAA,EAAA,EAA7BA,gBAA6B,CAA7BA;AACD;AA1HL,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,6BAAA,EA6HgC,UAAA,SAAA,EAAa;AAAA,UACjCxB,mBADiC,GACT,KAAA,CADS,KACT,CADS,mBAAA;;AAGzC,MAAA,KAAA,CAAA,gCAAA,CAAA,SAAA;;AACA,UAAI,CAAC8B,SAAS,CAAd,UAAA,EAA2B;AACzB,YAAME,GAAG,GAAGF,SAAS,CAAC9B,mBAAmB,CAA7B8B,QAAS,CAATA,GACRA,SAAS,CAAC9B,mBAAmB,CAA7B8B,QAAS,CAATA,CADQA,GAAAA,GAAZ,EAAA;;AAGA,YAAA,GAAA,EAAS;AACP,cAAMG,MAAM,GAAGjC,mBAAmB,CAAnBA,UAAAA,IAAf,OAAA;AACAkC,UAAAA,MAAM,CAANA,IAAAA,CAAAA,GAAAA,EAAAA,MAAAA;AACD;AAPH,OAAA,MAQO;AACL,QAAA,KAAA,CAAA,kBAAA,CAAwBJ,SAAS,CAAjC,UAAA;AACD;AA3IL,KAAA,CAAA;;AAAA,WAAA,KAAA;AAAA;;AAAA,EAAA,YAAA,CAAA,kBAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,QAAA;AAAA,IAAA,KAAA,EAAA,SAAA,MAAA,GA8IW;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UACCL,SADD,GACe,KADf,KACe,CADf,SAAA;;AAAA,UAAA,YAAA,GAiBH,KAjBG,KAAA;AAAA,UAGL3B,6BAHK,GAAA,YAAA,CAAA,6BAAA;AAAA,UAILE,mBAJK,GAAA,YAAA,CAAA,mBAAA;AAAA,UAKLQ,uBALK,GAAA,YAAA,CAAA,uBAAA;AAAA,UAMLY,oBANK,GAAA,YAAA,CAAA,oBAAA;AAAA,UAOLC,wBAPK,GAAA,YAAA,CAAA,wBAAA;AAAA,UAQLV,SARK,GAAA,YAAA,CAAA,SAAA;AAAA,UASLD,gBATK,GAAA,YAAA,CAAA,gBAAA;AAAA,UAULI,UAVK,GAAA,YAAA,CAAA,UAAA;AAAA,UAWLC,SAXK,GAAA,YAAA,CAAA,SAAA;AAAA,UAYLC,oBAZK,GAAA,YAAA,CAAA,oBAAA;AAAA,UAaLC,QAbK,GAAA,YAAA,CAAA,QAAA;AAAA,UAcLK,UAdK,GAAA,YAAA,CAAA,UAAA;AAAA,UAeLH,IAfK,GAAA,YAAA,CAAA,IAAA;AAAA,UAgBFgB,IAhBE,GAAA,wBAAA,CAAA,YAAA,EAAA,CAAA,+BAAA,EAAA,qBAAA,EAAA,yBAAA,EAAA,sBAAA,EAAA,0BAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,WAAA,EAAA,sBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,MAAA,CAAA,CAAA;;AAmBP,UAAMC,IAAI,GAAGjB,IAAI,IAAjB,SAAA;AACA,UAAMkB,eAAe,GACnB,CAAC,CAAC,CAAD,mBAAA,IAAyB,CAAC,CAA3B,uBAAA,KACAf,UAAU,CAAVA,MAAAA,IAFF,6BAAA;AAGA,UAAMgB,6BAA6B,GAAG,MAAM,CAAN,OAAA,CAAA,wBAAA,CAEpC;AAFoC,QAAA,MAAA,CAG7B,UAAA,GAAA,EAAA,IAAA,EAAA;AAAA,YAAA,KAAA,GAAA,cAAA,CAAA,IAAA,EAAA,CAAA,CAAA;AAAA,YAAOC,CAAP,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,YAAUC,KAAV,GAAA,KAAA,CAAA,CAAA,CAAA;;AAAA,eAAqBC,GAAG,GAAGD,KAAK,CAAhC,MAAA;AAH6B,OAAA,EAAtC,CAAsC,CAAtC;AAIA,UAAME,0BAA0B,GAC9BJ,6BAA6B,GAAGlB,oBAAoB,CADtD,MAAA;AAGA,UAAA,0BAAA;;AACA,UAAA,oBAAA,EAA0B;AACxBuB,QAAAA,0BAA0B,GAAG,SAAA,0BAAA,CAAA,SAAA,EAAa;AACxC3B,UAAAA,oBAAoB,CAAA,SAAA,EAElB;AACE4B,YAAAA,0BAA0B,EAAE,MAAI,CADlC,gCAAA;AAEEC,YAAAA,kBAAkB,EAAE,MAAI,CAF1B,kBAAA;AAGE7C,YAAAA,mBAAmB,EAAE,MAAI,CAAJ,KAAA,CAAWA;AAHlC,WAFkB,EAOlB,MAAI,CAPNgB,2BAAoB,CAApBA;AADF2B,SAAAA;AAWD;;AAED,aAAOP,IAAI,CAAA,aAAA,CAAA;AACTM,QAAAA,0BAA0B,EADjB,0BAAA;AAEThC,QAAAA,gBAAgB,EAFP,gBAAA;AAGTV,QAAAA,mBAAmB,EAHV,mBAAA;AAITQ,QAAAA,uBAAuB,EAJd,uBAAA;AAKTY,QAAAA,oBAAoB,EALX,oBAAA;AAMTC,QAAAA,wBAAwB,EANf,wBAAA;AAOTV,QAAAA,SAAS,EAPA,SAAA;AAQT2B,QAAAA,6BAA6B,EARpB,6BAAA;AASTO,QAAAA,kBAAkB,EAAE,KATX,kBAAA;AAUTpB,QAAAA,SAAS,EAVA,SAAA;AAWTmB,QAAAA,0BAA0B,EAAE,KAXnB,gCAAA;AAYTE,QAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,KAAA,EAAK;AAAA,iBAAI,MAAI,CAAJ,YAAA,CAAJ,KAAI,CAAJ;AAZN,SAAA;AAaT9B,QAAAA,oBAAoB,EAClB2B,0BAA0B,IAAI,KAdvB,2BAAA;AAeT1B,QAAAA,QAAQ,EAAEA,QAAQ,GACd,UAAA,CAAA,EAAK;AACHS,UAAAA,CAAC,CAADA,cAAAA;AACAT,UAAAA,QAAQ,CAARA,UAAQ,CAARA;AAHY,SAAA,GAKd,KApBK,YAAA;AAqBToB,QAAAA,eAAe,EArBN,eAAA;AAsBTG,QAAAA,KAAK,EAtBI,UAAA;AAuBT1B,QAAAA,UAAU,EAAA,aAAA,CAAA;AACRiC,UAAAA,OAAO,EAAE,KADD,WAAA;AAERC,UAAAA,MAAM,EAAE,KAAKC;AAFL,SAAA,EAvBD,UAuBC,CAvBD;AA4BTlC,QAAAA,SAAS,EAATA;AA5BS,OAAA,EAAX,IAAW,CAAA,CAAX;AA+BD;AA1NH,GAAA,CAAA,CAAA;;AAAA,SAAA,kBAAA;AAAA,CAAA,CAAA,SAAA,CAAA;;gBAAalB,kB,eACQ;AACjB;AACAC,EAAAA,6BAA6B,EAAEC,SAAS,CAFvB,MAAA;AAGjBC,EAAAA,mBAAmB,EAAE,SAAS,CAAT,SAAA,CAAoB,CACvCD,SAAS,CAD8B,IAAA,EAEvC,SAAS,CAAT,KAAA,CAAgB;AACdE,IAAAA,gBAAgB,EAAEF,SAAS,CAATA,OAAAA,CAAkBA,SAAS,CAD/B,MACIA,CADJ;AAEdG,IAAAA,UAAU,EAAEH,SAAS,CAFP,MAAA;AAGdI,IAAAA,YAAY,EAAEJ,SAAS,CAHT,MAAA;AAIdK,IAAAA,uBAAuB,EAAEL,SAAS,CAJpB,IAAA;AAKdM,IAAAA,UAAU,EAAEN,SAAS,CAATA,MAAAA,CALE,UAAA;AAMdO,IAAAA,QAAQ,EAAEP,SAAS,CAATA,MAAAA,CAAiBQ;AANb,GAAhB,CAFuC,CAApB,CAHJ;AAcjBC,EAAAA,uBAAuB,EAAE,SAAS,CAAT,SAAA,CAAoB,CAC3CT,SAAS,CADkC,IAAA,EAE3C,SAAS,CAAT,KAAA,CAAgB;AACdI,IAAAA,YAAY,EAAEJ,SAAS,CAACU;AADV,GAAhB,CAF2C,EAK3C,SAAS,CAAT,QAAA,CACE,SAAS,CAAT,KAAA,CAAgB;AACdN,IAAAA,YAAY,EAAEJ,SAAS,CAACU;AADV,GAAhB,CADF,CAL2C,CAApB,CAdR;AAyBjBC,EAAAA,gBAAgB,EAAEX,SAAS,CAzBV,IAAA;AA0BjBY,EAAAA,SAAS,EAAEZ,SAAS,CA1BH,MAAA;AA2BjBa,EAAAA,kBAAkB,EAAEb,SAAS,CA3BZ,IAAA;AA4BjBc,EAAAA,cAAc,EAAEd,SAAS,CA5BR,MAAA;AA6BjBe,EAAAA,UAAU,EAAEf,SAAS,CA7BJ,MAAA;AA8BjBgB,EAAAA,SAAS,EAAEhB,SAAS,CA9BH,IAAA;AA+BjBiB,EAAAA,oBAAoB,EAAEjB,SAAS,CA/Bd,IAAA;AAgCjBkB,EAAAA,QAAQ,EAAElB,SAAS,CAhCF,IAAA;AAiCjBmB,EAAAA,eAAe,EAAEnB,SAAS,CAjCT,IAAA;AAkCjBoB,EAAAA,IAAI,EAAEpB,SAAS,CAlCE,IAAA;AAmCjB;AACAqB,EAAAA,oBAAoB,EAAErB,SAAS,CAATA,OAAAA,CAAAA,MAAAA,EApCL,UAAA;AAqCjBsB,EAAAA,wBAAwB,EAAEtB,SAAS,CAATA,QAAAA,CAAmBA,SAAS,CAATA,OAAAA,CAAnBA,UAAmBA,CAAnBA,EArCT,UAAA;AAuCjBuB,EAAAA,UAAU,EAAEvB,SAAS,CAATA,MAAAA,CAvCK,UAAA;AAwCjB;AACAwB,EAAAA,aAAa,EAAExB,SAAS,CAATA,IAAAA,CAzCE,UAAA;AA0CjByB,EAAAA,6BAA6B,EAAEzB,SAAS,CAATA,IAAAA,CAAeQ;AA1C7B,C;;gBADRV,kB,kBA8CW;AACpBC,EAAAA,6BAA6B,EADT,CAAA;AAEpBc,EAAAA,kBAAkB,EAAE;AAFA,C;;AA+KxB,eAAe,UAAU,CACvB,UAAA,KAAA,EAAA;AAAA,MACEQ,oBADF,GAAA,KAAA,CAAA,oBAAA;AAAA,MAEEC,wBAFF,GAAA,KAAA,CAAA,wBAAA;AAAA,MAGEC,UAHF,GAAA,KAAA,CAAA,UAAA;AAAA,MAIEC,aAJF,GAAA,KAAA,CAAA,aAAA;AAAA,MAKEC,6BALF,GAAA,KAAA,CAAA,6BAAA;AAAA,SAMO;AACLJ,IAAAA,oBAAoB,EADf,oBAAA;AAELC,IAAAA,wBAAwB,EAFnB,wBAAA;AAGLC,IAAAA,UAAU,EAHL,UAAA;AAILC,IAAAA,aAAa,EAJR,aAAA;AAKLC,IAAAA,6BAA6B,EAA7BA;AALK,GANP;AADa,CAAU,CAAV,CAAf,kBAAe,CAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport { SearchBox } from \"@elastic/react-search-ui-views\";\n\nimport { withSearch } from \"..\";\nimport { Result, Suggestion } from \"../types\";\n\nexport class SearchBoxContainer extends Component {\n  static propTypes = {\n    // Props\n    autocompleteMinimumCharacters: PropTypes.number,\n    autocompleteResults: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.shape({\n        clickThroughTags: PropTypes.arrayOf(PropTypes.string),\n        linkTarget: PropTypes.string,\n        sectionTitle: PropTypes.string,\n        shouldTrackClickThrough: PropTypes.bool,\n        titleField: PropTypes.string.isRequired,\n        urlField: PropTypes.string.isRequired\n      })\n    ]),\n    autocompleteSuggestions: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.exact({\n        sectionTitle: PropTypes.string\n      }),\n      PropTypes.objectOf(\n        PropTypes.exact({\n          sectionTitle: PropTypes.string\n        })\n      )\n    ]),\n    autocompleteView: PropTypes.func,\n    className: PropTypes.string,\n    shouldClearFilters: PropTypes.bool,\n    debounceLength: PropTypes.number,\n    inputProps: PropTypes.object,\n    inputView: PropTypes.func,\n    onSelectAutocomplete: PropTypes.func,\n    onSubmit: PropTypes.func,\n    searchAsYouType: PropTypes.bool,\n    view: PropTypes.func,\n    // State\n    autocompletedResults: PropTypes.arrayOf(Result).isRequired,\n    autocompletedSuggestions: PropTypes.objectOf(PropTypes.arrayOf(Suggestion))\n      .isRequired,\n    searchTerm: PropTypes.string.isRequired,\n    // Actions\n    setSearchTerm: PropTypes.func.isRequired,\n    trackAutocompleteClickThrough: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    autocompleteMinimumCharacters: 0,\n    shouldClearFilters: true\n  };\n\n  state = {\n    isFocused: false\n  };\n\n  handleFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  handleBlur = () => {\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  completeSuggestion = searchTerm => {\n    const { shouldClearFilters, setSearchTerm } = this.props;\n    setSearchTerm(searchTerm, {\n      shouldClearFilters\n    });\n  };\n\n  handleSubmit = e => {\n    const { shouldClearFilters, searchTerm, setSearchTerm } = this.props;\n\n    e.preventDefault();\n    setSearchTerm(searchTerm, {\n      shouldClearFilters\n    });\n  };\n\n  handleChange = value => {\n    const {\n      autocompleteMinimumCharacters,\n      autocompleteResults,\n      autocompleteSuggestions,\n      shouldClearFilters,\n      searchAsYouType,\n      setSearchTerm,\n      debounceLength\n    } = this.props;\n\n    const options = {\n      autocompleteMinimumCharacters,\n      ...((autocompleteResults ||\n        autocompleteSuggestions ||\n        searchAsYouType) && {\n        debounce: debounceLength || 200\n      }),\n      shouldClearFilters,\n      refresh: !!searchAsYouType,\n      autocompleteResults: !!autocompleteResults,\n      autocompleteSuggestions: !!autocompleteSuggestions\n    };\n\n    setSearchTerm(value, options);\n  };\n\n  handleNotifyAutocompleteSelected = selection => {\n    const { autocompleteResults, trackAutocompleteClickThrough } = this.props;\n    // Because suggestions don't count as clickthroughs, only\n    // results\n    if (\n      autocompleteResults &&\n      autocompleteResults.shouldTrackClickThrough !== false &&\n      !selection.suggestion\n    ) {\n      const { clickThroughTags = [] } = autocompleteResults;\n      const id = selection.id.raw;\n      trackAutocompleteClickThrough(id, clickThroughTags);\n    }\n  };\n\n  defaultOnSelectAutocomplete = selection => {\n    const { autocompleteResults } = this.props;\n\n    this.handleNotifyAutocompleteSelected(selection);\n    if (!selection.suggestion) {\n      const url = selection[autocompleteResults.urlField]\n        ? selection[autocompleteResults.urlField].raw\n        : \"\";\n      if (url) {\n        const target = autocompleteResults.linkTarget || \"_self\";\n        window.open(url, target);\n      }\n    } else {\n      this.completeSuggestion(selection.suggestion);\n    }\n  };\n\n  render() {\n    const { isFocused } = this.state;\n    const {\n      autocompleteMinimumCharacters,\n      autocompleteResults,\n      autocompleteSuggestions,\n      autocompletedResults,\n      autocompletedSuggestions,\n      className,\n      autocompleteView,\n      inputProps,\n      inputView,\n      onSelectAutocomplete,\n      onSubmit,\n      searchTerm,\n      view,\n      ...rest\n    } = this.props;\n\n    const View = view || SearchBox;\n    const useAutocomplete =\n      (!!autocompleteResults || !!autocompleteSuggestions) &&\n      searchTerm.length >= autocompleteMinimumCharacters;\n    const autocompletedSuggestionsCount = Object.entries(\n      autocompletedSuggestions\n      // eslint-disable-next-line no-unused-vars\n    ).reduce((acc, [_, value]) => acc + value.length, 0);\n    const allAutocompletedItemsCount =\n      autocompletedSuggestionsCount + autocompletedResults.length;\n\n    let handleOnSelectAutocomplete;\n    if (onSelectAutocomplete) {\n      handleOnSelectAutocomplete = selection => {\n        onSelectAutocomplete(\n          selection,\n          {\n            notifyAutocompleteSelected: this.handleNotifyAutocompleteSelected,\n            completeSuggestion: this.completeSuggestion,\n            autocompleteResults: this.props.autocompleteResults\n          },\n          this.defaultOnSelectAutocomplete\n        );\n      };\n    }\n\n    return View({\n      allAutocompletedItemsCount: allAutocompletedItemsCount,\n      autocompleteView,\n      autocompleteResults: autocompleteResults,\n      autocompleteSuggestions: autocompleteSuggestions,\n      autocompletedResults: autocompletedResults,\n      autocompletedSuggestions: autocompletedSuggestions,\n      className,\n      autocompletedSuggestionsCount: autocompletedSuggestionsCount,\n      completeSuggestion: this.completeSuggestion,\n      isFocused: isFocused,\n      notifyAutocompleteSelected: this.handleNotifyAutocompleteSelected,\n      onChange: value => this.handleChange(value),\n      onSelectAutocomplete:\n        handleOnSelectAutocomplete || this.defaultOnSelectAutocomplete,\n      onSubmit: onSubmit\n        ? e => {\n            e.preventDefault();\n            onSubmit(searchTerm);\n          }\n        : this.handleSubmit,\n      useAutocomplete: useAutocomplete,\n      value: searchTerm,\n      inputProps: {\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        ...inputProps\n      },\n      inputView,\n      ...rest\n    });\n  }\n}\n\nexport default withSearch(\n  ({\n    autocompletedResults,\n    autocompletedSuggestions,\n    searchTerm,\n    setSearchTerm,\n    trackAutocompleteClickThrough\n  }) => ({\n    autocompletedResults,\n    autocompletedSuggestions,\n    searchTerm,\n    setSearchTerm,\n    trackAutocompleteClickThrough\n  })\n)(SearchBoxContainer);\n"]},"metadata":{},"sourceType":"module"}