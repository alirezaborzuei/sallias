{"ast":null,"code":"import { removeSingleFilterValue } from \"../helpers\";\n/**\n * Remove filter from results\n *\n * Will trigger new search\n *\n * @param name String field name for filter to remove\n * @param value String (Optional) field value for filter to remove\n * @param type String (Optional) type of filter to remove\n */\n\nexport default function removeFilter(name, value, type) {\n  var _console;\n\n  if (this.debug) // eslint-disable-next-line no-console\n    (_console = console).log.apply(_console, [\"Search UI: Action\", \"removeFilter\"].concat(Array.prototype.slice.call(arguments)));\n  var filters = this.state.filters;\n  var updatedFilters = filters;\n\n  if (!value && type) {\n    updatedFilters = filters.filter(function (filter) {\n      return !(filter.field === name && filter.type === type);\n    });\n  } else if (value) {\n    updatedFilters = removeSingleFilterValue(filters, name, value, type);\n  } else {\n    updatedFilters = filters.filter(function (filter) {\n      return filter.field !== name;\n    });\n  }\n\n  this._updateSearchResults({\n    current: 1,\n    filters: updatedFilters\n  });\n}","map":{"version":3,"sources":["../../src/actions/removeFilter.js"],"names":["filters","updatedFilters","filter","removeSingleFilterValue","current"],"mappings":"AAAA,SAAA,uBAAA,QAAA,YAAA;AAEA;;;;;;;;;;AASA,eAAe,SAAA,YAAA,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAyC;AAAA,MAAA,QAAA;;AACtD,MAAI,KAAJ,KAAA,EACE;AACA,KAAA,QAAA,GAAA,OAAA,EAAA,GAAA,CAAA,KAAA,CAAA,QAAA,EAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA;AAHoD,MAK9CA,OAL8C,GAKlC,KALkC,KAKlC,CALkC,OAAA;AAOtD,MAAIC,cAAc,GAAlB,OAAA;;AAEA,MAAI,CAAA,KAAA,IAAJ,IAAA,EAAoB;AAClBA,IAAAA,cAAc,GAAG,OAAO,CAAP,MAAA,CACf,UAAA,MAAA,EAAM;AAAA,aAAI,EAAEC,MAAM,CAANA,KAAAA,KAAAA,IAAAA,IAAyBA,MAAM,CAANA,IAAAA,KAA/B,IAAI,CAAJ;AADRD,KAAiB,CAAjBA;AADF,GAAA,MAIO,IAAA,KAAA,EAAW;AAChBA,IAAAA,cAAc,GAAGE,uBAAuB,CAAA,OAAA,EAAA,IAAA,EAAA,KAAA,EAAxCF,IAAwC,CAAxCA;AADK,GAAA,MAEA;AACLA,IAAAA,cAAc,GAAG,OAAO,CAAP,MAAA,CAAe,UAAA,MAAA,EAAM;AAAA,aAAIC,MAAM,CAANA,KAAAA,KAAJ,IAAA;AAAtCD,KAAiB,CAAjBA;AACD;;AAED,OAAA,oBAAA,CAA0B;AACxBG,IAAAA,OAAO,EADiB,CAAA;AAExBJ,IAAAA,OAAO,EAAEC;AAFe,GAA1B;AAID","sourcesContent":["import { removeSingleFilterValue } from \"../helpers\";\n\n/**\n * Remove filter from results\n *\n * Will trigger new search\n *\n * @param name String field name for filter to remove\n * @param value String (Optional) field value for filter to remove\n * @param type String (Optional) type of filter to remove\n */\nexport default function removeFilter(name, value, type) {\n  if (this.debug)\n    // eslint-disable-next-line no-console\n    console.log(\"Search UI: Action\", \"removeFilter\", ...arguments);\n\n  const { filters } = this.state;\n\n  let updatedFilters = filters;\n\n  if (!value && type) {\n    updatedFilters = filters.filter(\n      filter => !(filter.field === name && filter.type === type)\n    );\n  } else if (value) {\n    updatedFilters = removeSingleFilterValue(filters, name, value, type);\n  } else {\n    updatedFilters = filters.filter(filter => filter.field !== name);\n  }\n\n  this._updateSearchResults({\n    current: 1,\n    filters: updatedFilters\n  });\n}\n"]},"metadata":{},"sourceType":"module"}