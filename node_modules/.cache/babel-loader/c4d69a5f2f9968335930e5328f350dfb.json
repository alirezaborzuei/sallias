{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport { appendClassName } from \"./view-helpers\";\nvar setDefaultStyle = {\n  option: function option() {\n    return {};\n  },\n  control: function control() {\n    return {};\n  },\n  dropdownIndicator: function dropdownIndicator() {\n    return {};\n  },\n  indicatorSeparator: function indicatorSeparator() {\n    return {};\n  }\n};\n\nfunction Sorting(_ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      _onChange = _ref.onChange,\n      options = _ref.options,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"label\", \"onChange\", \"options\", \"value\"]);\n\n  var selectedValue = value;\n  var selectedOption = selectedValue ? options.find(function (option) {\n    return option.value === selectedValue;\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: appendClassName(\"sui-sorting\", className)\n  }, rest), label && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-sorting__label\"\n  }, label), /*#__PURE__*/React.createElement(Select, {\n    className: \"sui-select\",\n    classNamePrefix: \"sui-select\",\n    value: selectedOption,\n    onChange: function onChange(o) {\n      return _onChange(o.value);\n    },\n    options: options,\n    isSearchable: false,\n    styles: setDefaultStyle\n  }));\n}\n\nSorting.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string\n  })).isRequired,\n  value: PropTypes.string\n};\nexport default Sorting;","map":{"version":3,"sources":["../src/Sorting.js"],"names":["setDefaultStyle","option","control","dropdownIndicator","indicatorSeparator","className","label","onChange","options","value","rest","selectedValue","selectedOption","appendClassName","o","Sorting","PropTypes","string"],"mappings":";;AAAA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,cAAA;AAEA,SAAA,eAAA,QAAA,gBAAA;AAEA,IAAMA,eAAe,GAAG;AACtBC,EAAAA,MAAM,EAAE,SAAA,MAAA,GAAA;AAAA,WAAA,EAAA;AADc,GAAA;AAEtBC,EAAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,WAAA,EAAA;AAFa,GAAA;AAGtBC,EAAAA,iBAAiB,EAAE,SAAA,iBAAA,GAAA;AAAA,WAAA,EAAA;AAHG,GAAA;AAItBC,EAAAA,kBAAkB,EAAE,SAAA,kBAAA,GAAA;AAAA,WAAA,EAAA;AAAA;AAJE,CAAxB;;AAOA,SAAA,OAAA,CAAA,IAAA,EAA0E;AAAA,MAAvDC,SAAuD,GAAA,IAAA,CAAvDA,SAAuD;AAAA,MAA5CC,KAA4C,GAAA,IAAA,CAA5CA,KAA4C;AAAA,MAArCC,SAAqC,GAAA,IAAA,CAArCA,QAAqC;AAAA,MAA3BC,OAA2B,GAAA,IAAA,CAA3BA,OAA2B;AAAA,MAAlBC,KAAkB,GAAA,IAAA,CAAlBA,KAAkB;AAAA,MAARC,IAAQ,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA,OAAA,CAAA,CAAA;;AACxE,MAAMC,aAAa,GAAnB,KAAA;AAEA,MAAMC,cAAc,GAAGD,aAAa,GAChC,OAAO,CAAP,IAAA,CAAa,UAAA,MAAA,EAAM;AAAA,WAAIV,MAAM,CAANA,KAAAA,KAAJ,aAAA;AADa,GAChC,CADgC,GAApC,IAAA;AAIA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,IAAA,SAAS,EAAEY,eAAe,CAAA,aAAA,EAAA,SAAA;AAA/B,GAAA,EAAA,IAAA,CAAA,EACGP,KAAK,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADZ,KACY,CADZ,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,IAAA,SAAS,EADX,YAAA;AAEE,IAAA,eAAe,EAFjB,YAAA;AAGE,IAAA,KAAK,EAHP,cAAA;AAIE,IAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,CAAA,EAAC;AAAA,aAAIC,SAAQ,CAACO,CAAC,CAAd,KAAY,CAAZ;AAJb,KAAA;AAKE,IAAA,OAAO,EALT,OAAA;AAME,IAAA,YAAY,EANd,KAAA;AAOE,IAAA,MAAM,EAAEd;AAPV,GAAA,CAFF,CADF;AAcD;;AAEDe,OAAO,CAAPA,SAAAA,GAAoB;AAClBV,EAAAA,SAAS,EAAEW,SAAS,CADF,MAAA;AAElBV,EAAAA,KAAK,EAAEU,SAAS,CAFE,MAAA;AAGlBT,EAAAA,QAAQ,EAAES,SAAS,CAATA,IAAAA,CAHQ,UAAA;AAIlBR,EAAAA,OAAO,EAAE,SAAS,CAAT,OAAA,CACP,SAAS,CAAT,KAAA,CAAgB;AAAEC,IAAAA,KAAK,EAAEO,SAAS,CAAlB,MAAA;AAA2BV,IAAAA,KAAK,EAAEU,SAAS,CAACC;AAA5C,GAAhB,CADO,EAJS,UAAA;AAOlBR,EAAAA,KAAK,EAAEO,SAAS,CAACC;AAPC,CAApBF;AAUA,eAAA,OAAA","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Select from \"react-select\";\n\nimport { appendClassName } from \"./view-helpers\";\n\nconst setDefaultStyle = {\n  option: () => ({}),\n  control: () => ({}),\n  dropdownIndicator: () => ({}),\n  indicatorSeparator: () => ({})\n};\n\nfunction Sorting({ className, label, onChange, options, value, ...rest }) {\n  const selectedValue = value;\n\n  const selectedOption = selectedValue\n    ? options.find(option => option.value === selectedValue)\n    : null;\n\n  return (\n    <div className={appendClassName(\"sui-sorting\", className)} {...rest}>\n      {label && <div className=\"sui-sorting__label\">{label}</div>}\n      <Select\n        className=\"sui-select\"\n        classNamePrefix=\"sui-select\"\n        value={selectedOption}\n        onChange={o => onChange(o.value)}\n        options={options}\n        isSearchable={false}\n        styles={setDefaultStyle}\n      />\n    </div>\n  );\n}\n\nSorting.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({ value: PropTypes.string, label: PropTypes.string })\n  ).isRequired,\n  value: PropTypes.string\n};\n\nexport default Sorting;\n"]},"metadata":{},"sourceType":"module"}