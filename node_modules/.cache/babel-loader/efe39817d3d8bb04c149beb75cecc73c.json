{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FacetValue, FilterValue } from \"./types\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction BooleanFacet(_ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      options = _ref.options,\n      onChange = _ref.onChange,\n      onRemove = _ref.onRemove,\n      values = _ref.values;\n  var trueOptions = options.find(function (option) {\n    return option.value === \"true\";\n  });\n  if (!trueOptions) return null;\n  var isSelected = values.includes(\"true\");\n\n  var apply = function apply() {\n    return onChange(\"true\");\n  };\n\n  var remove = function remove() {\n    return onRemove(\"true\");\n  };\n\n  var toggle = function toggle() {\n    isSelected ? remove() : apply();\n  };\n\n  return /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: appendClassName(\"sui-facet\", className)\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    className: \"sui-facet__title\"\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-boolean-facet\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-boolean-facet__option-input-wrapper\"\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"sui-boolean-facet__option-label\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-boolean-facet__option-input-wrapper\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"sui-boolean-facet__checkbox\",\n    type: \"checkbox\",\n    onChange: toggle,\n    checked: isSelected\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sui-boolean-facet__input-text\"\n  }, label)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sui-boolean-facet__option-count\"\n  }, trueOptions.count)))));\n}\n\nBooleanFacet.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  values: PropTypes.arrayOf(FilterValue).isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default BooleanFacet;","map":{"version":3,"sources":["../src/BooleanFacet.js"],"names":["className","label","options","onChange","onRemove","values","trueOptions","option","isSelected","apply","remove","toggle","appendClassName","BooleanFacet","PropTypes","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { FacetValue, FilterValue } from \"./types\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction BooleanFacet({\n  className,\n  label,\n  options,\n  onChange,\n  onRemove,\n  values\n}) {\n  const trueOptions = options.find(option => option.value === \"true\");\n  if (!trueOptions) return null;\n  const isSelected = values.includes(\"true\");\n\n  const apply = () => onChange(\"true\");\n  const remove = () => onRemove(\"true\");\n  const toggle = () => {\n    isSelected ? remove() : apply();\n  };\n\n  return (\n    <fieldset className={appendClassName(\"sui-facet\", className)}>\n      <legend className=\"sui-facet__title\">{label}</legend>\n      <div className=\"sui-boolean-facet\">\n        <div className={\"sui-boolean-facet__option-input-wrapper\"}>\n          <label className=\"sui-boolean-facet__option-label\">\n            <div className=\"sui-boolean-facet__option-input-wrapper\">\n              <input\n                className=\"sui-boolean-facet__checkbox\"\n                type=\"checkbox\"\n                onChange={toggle}\n                checked={isSelected}\n              />\n              <span className=\"sui-boolean-facet__input-text\">{label}</span>\n            </div>\n            <span className=\"sui-boolean-facet__option-count\">\n              {trueOptions.count}\n            </span>\n          </label>\n        </div>\n      </div>\n    </fieldset>\n  );\n}\n\nBooleanFacet.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  values: PropTypes.arrayOf(FilterValue).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default BooleanFacet;\n"]},"metadata":{},"sourceType":"module"}