{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport { appendClassName } from \"./view-helpers\";\nvar setDefaultStyle = {\n  option: function option() {\n    return {};\n  },\n  control: function control() {\n    return {};\n  },\n  dropdownIndicator: function dropdownIndicator() {\n    return {};\n  },\n  indicatorSeparator: function indicatorSeparator() {\n    return {};\n  },\n  singleValue: function singleValue(provided) {\n    // Pulling out CSS that we don't want\n    // eslint-disable-next-line no-unused-vars\n    var position = provided.position,\n        top = provided.top,\n        transform = provided.transform,\n        maxWidth = provided.maxWidth,\n        rest = _objectWithoutProperties(provided, [\"position\", \"top\", \"transform\", \"maxWidth\"]);\n\n    return _objectSpread(_objectSpread({}, rest), {}, {\n      lineHeight: 1,\n      marginRight: 0\n    });\n  },\n  valueContainer: function valueContainer(provided) {\n    return _objectSpread(_objectSpread({}, provided), {}, {\n      paddingRight: 0\n    });\n  }\n};\n\nvar wrapOption = function wrapOption(option) {\n  return {\n    label: option,\n    value: option\n  };\n};\n\nfunction ResultsPerPage(_ref) {\n  var className = _ref.className,\n      _onChange = _ref.onChange,\n      options = _ref.options,\n      selectedValue = _ref.value,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"onChange\", \"options\", \"value\"]);\n\n  var selectedOption = null;\n\n  if (selectedValue) {\n    selectedOption = wrapOption(selectedValue);\n    if (!options.includes(selectedValue)) options = [selectedValue].concat(_toConsumableArray(options));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: appendClassName(\"sui-results-per-page\", className)\n  }, rest), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-results-per-page__label\"\n  }, \"Show\"), /*#__PURE__*/React.createElement(Select, {\n    className: \"sui-select sui-select--inline\",\n    classNamePrefix: \"sui-select\",\n    value: selectedOption,\n    onChange: function onChange(o) {\n      return _onChange(o.value);\n    },\n    options: options.map(wrapOption),\n    isSearchable: false,\n    styles: setDefaultStyle\n  }));\n}\n\nResultsPerPage.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.number).isRequired,\n  className: PropTypes.string,\n  value: PropTypes.number\n};\nexport default ResultsPerPage;","map":{"version":3,"sources":["../src/ResultsPerPage.js"],"names":["setDefaultStyle","option","control","dropdownIndicator","indicatorSeparator","singleValue","position","top","transform","maxWidth","rest","provided","lineHeight","marginRight","valueContainer","paddingRight","wrapOption","label","value","className","onChange","options","selectedValue","selectedOption","appendClassName","o","ResultsPerPage","PropTypes","number"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Select from \"react-select\";\n\nimport { appendClassName } from \"./view-helpers\";\n\nconst setDefaultStyle = {\n  option: () => ({}),\n  control: () => ({}),\n  dropdownIndicator: () => ({}),\n  indicatorSeparator: () => ({}),\n  singleValue: provided => {\n    // Pulling out CSS that we don't want\n    // eslint-disable-next-line no-unused-vars\n    const { position, top, transform, maxWidth, ...rest } = provided;\n    return { ...rest, lineHeight: 1, marginRight: 0 };\n  },\n  valueContainer: provided => ({ ...provided, paddingRight: 0 })\n};\n\nconst wrapOption = option => ({ label: option, value: option });\n\nfunction ResultsPerPage({\n  className,\n  onChange,\n  options,\n  value: selectedValue,\n  ...rest\n}) {\n  let selectedOption = null;\n\n  if (selectedValue) {\n    selectedOption = wrapOption(selectedValue);\n\n    if (!options.includes(selectedValue)) options = [selectedValue, ...options];\n  }\n\n  return (\n    <div\n      className={appendClassName(\"sui-results-per-page\", className)}\n      {...rest}\n    >\n      <div className=\"sui-results-per-page__label\">Show</div>\n      <Select\n        className=\"sui-select sui-select--inline\"\n        classNamePrefix=\"sui-select\"\n        value={selectedOption}\n        onChange={o => onChange(o.value)}\n        options={options.map(wrapOption)}\n        isSearchable={false}\n        styles={setDefaultStyle}\n      />\n    </div>\n  );\n}\n\nResultsPerPage.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.number).isRequired,\n  className: PropTypes.string,\n  value: PropTypes.number\n};\n\nexport default ResultsPerPage;\n"]},"metadata":{},"sourceType":"module"}