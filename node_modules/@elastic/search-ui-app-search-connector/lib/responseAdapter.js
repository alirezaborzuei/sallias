"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.adaptResponse = adaptResponse;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function adaptation1AdaptFacetValue(facetValue) {
  var additionalFacetValueFieldsForField = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var hasValue = facetValue.hasOwnProperty("value");
  var count = facetValue.count,
      value = facetValue.value,
      rest = (0, _objectWithoutProperties2.default)(facetValue, ["count", "value"]);
  return {
    count: count,
    value: hasValue ? value : _objectSpread(_objectSpread({}, rest), additionalFacetValueFieldsForField)
  };
}

function adaptation2AddLabelToFacet(fieldName, facet) {
  return _objectSpread({
    field: fieldName
  }, facet);
}

function adaptFacets(facets, _ref) {
  var _ref$additionalFacetV = _ref.additionalFacetValueFields,
      additionalFacetValueFields = _ref$additionalFacetV === void 0 ? {} : _ref$additionalFacetV;
  if (!facets || Object.keys(facets).length === 0) return facets;
  return Object.entries(facets).reduce(function (acc, _ref2) {
    var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
        fieldName = _ref3[0],
        facet = _ref3[1];

    var adaptedFacet = facet.map(function (v) {
      var type = v.type,
          data = v.data,
          rest = (0, _objectWithoutProperties2.default)(v, ["type", "data"]);
      return adaptation2AddLabelToFacet(fieldName, _objectSpread({
        type: type,
        data: data.map(function (f) {
          return adaptation1AdaptFacetValue(f, additionalFacetValueFields[fieldName]);
        })
      }, rest));
    });
    return _objectSpread(_objectSpread({}, acc), {}, (0, _defineProperty2.default)({}, fieldName, adaptedFacet));
  }, {});
}

function limitTo100pages(totalPages) {
  // We limit this to 100 pages since App Search currently cannot page past 100 pages
  return Math.min(totalPages, 100);
}

function adaptResponse(response) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var facets = response.info.facets;
  var requestId = response.info.meta.request_id;
  var totalPages = response.info.meta.page && typeof response.info.meta.page.total_pages !== "undefined" ? limitTo100pages(response.info.meta.page.total_pages) : undefined;
  var totalResults = response.info.meta.page ? response.info.meta.page.total_results : undefined;
  return _objectSpread(_objectSpread(_objectSpread({}, facets && {
    facets: adaptFacets(facets, options)
  }), {}, {
    requestId: requestId,
    results: response.rawResults
  }, totalPages !== undefined && {
    totalPages: totalPages
  }), totalResults !== undefined && {
    totalResults: totalResults
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZXNwb25zZUFkYXB0ZXIuanMiXSwibmFtZXMiOlsiYWRhcHRhdGlvbjFBZGFwdEZhY2V0VmFsdWUiLCJmYWNldFZhbHVlIiwiYWRkaXRpb25hbEZhY2V0VmFsdWVGaWVsZHNGb3JGaWVsZCIsImhhc1ZhbHVlIiwiaGFzT3duUHJvcGVydHkiLCJjb3VudCIsInZhbHVlIiwicmVzdCIsImFkYXB0YXRpb24yQWRkTGFiZWxUb0ZhY2V0IiwiZmllbGROYW1lIiwiZmFjZXQiLCJmaWVsZCIsImFkYXB0RmFjZXRzIiwiZmFjZXRzIiwiYWRkaXRpb25hbEZhY2V0VmFsdWVGaWVsZHMiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwiZW50cmllcyIsInJlZHVjZSIsImFjYyIsImFkYXB0ZWRGYWNldCIsIm1hcCIsInYiLCJ0eXBlIiwiZGF0YSIsImYiLCJsaW1pdFRvMTAwcGFnZXMiLCJ0b3RhbFBhZ2VzIiwiTWF0aCIsIm1pbiIsImFkYXB0UmVzcG9uc2UiLCJyZXNwb25zZSIsIm9wdGlvbnMiLCJpbmZvIiwicmVxdWVzdElkIiwibWV0YSIsInJlcXVlc3RfaWQiLCJwYWdlIiwidG90YWxfcGFnZXMiLCJ1bmRlZmluZWQiLCJ0b3RhbFJlc3VsdHMiLCJ0b3RhbF9yZXN1bHRzIiwicmVzdWx0cyIsInJhd1Jlc3VsdHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxTQUFTQSwwQkFBVCxDQUNFQyxVQURGLEVBR0U7QUFBQSxNQURBQyxrQ0FDQSx1RUFEcUMsRUFDckM7QUFDQSxNQUFNQyxRQUFRLEdBQUdGLFVBQVUsQ0FBQ0csY0FBWCxDQUEwQixPQUExQixDQUFqQjtBQURBLE1BRVFDLEtBRlIsR0FFa0NKLFVBRmxDLENBRVFJLEtBRlI7QUFBQSxNQUVlQyxLQUZmLEdBRWtDTCxVQUZsQyxDQUVlSyxLQUZmO0FBQUEsTUFFeUJDLElBRnpCLDBDQUVrQ04sVUFGbEM7QUFHQSxTQUFPO0FBQ0xJLElBQUFBLEtBQUssRUFBTEEsS0FE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LEVBQVZBO0FBQUYsR0FKbEMsR0FLTWEsWUFBWSxLQUFLRCxTQUFqQixJQUE4QjtBQUFFQyxJQUFBQSxZQUFZLEVBQVpBO0FBQUYsR0FMcEM7QUFPRCIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFkYXB0YXRpb24xQWRhcHRGYWNldFZhbHVlKFxuICBmYWNldFZhbHVlLFxuICBhZGRpdGlvbmFsRmFjZXRWYWx1ZUZpZWxkc0ZvckZpZWxkID0ge31cbikge1xuICBjb25zdCBoYXNWYWx1ZSA9IGZhY2V0VmFsdWUuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKTtcbiAgY29uc3QgeyBjb3VudCwgdmFsdWUsIC4uLnJlc3QgfSA9IGZhY2V0VmFsdWU7XG4gIHJldHVybiB7XG4gICAgY291bnQsXG4gICAgdmFsdWU6IGhhc1ZhbHVlXG4gICAgICA/IHZhbHVlXG4gICAgICA6IHtcbiAgICAgICAgICAuLi5yZXN0LFxuICAgICAgICAgIC4uLmFkZGl0aW9uYWxGYWNldFZhbHVlRmllbGRzRm9yRmllbGRcbiAgICAgICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBhZGFwdGF0aW9uMkFkZExhYmVsVG9GYWNldChmaWVsZE5hbWUsIGZhY2V0KSB7XG4gIHJldHVybiB7XG4gICAgZmllbGQ6IGZpZWxkTmFtZSxcbiAgICAuLi5mYWNldFxuICB9O1xufVxuXG5mdW5jdGlvbiBhZGFwdEZhY2V0cyhmYWNldHMsIHsgYWRkaXRpb25hbEZhY2V0VmFsdWVGaWVsZHMgPSB7fSB9KSB7XG4gIGlmICghZmFjZXRzIHx8IE9iamVjdC5rZXlzKGZhY2V0cykubGVuZ3RoID09PSAwKSByZXR1cm4gZmFjZXRzO1xuXG4gIHJldHVybiBPYmplY3QuZW50cmllcyhmYWNldHMpLnJlZHVjZSgoYWNjLCBbZmllbGROYW1lLCBmYWNldF0pID0+IHtcbiAgICBjb25zdCBhZGFwdGVkRmFjZXQgPSBmYWNldC5tYXAodiA9PiB7XG4gICAgICBjb25zdCB7IHR5cGUsIGRhdGEsIC4uLnJlc3QgfSA9IHY7XG4gICAgICByZXR1cm4gYWRhcHRhdGlvbjJBZGRMYWJlbFRvRmFjZXQoZmllbGROYW1lLCB7XG4gICAgICAgIHR5cGUsXG4gICAgICAgIGRhdGE6IGRhdGEubWFwKGYgPT5cbiAgICAgICAgICBhZGFwdGF0aW9uMUFkYXB0RmFjZXRWYWx1ZShmLCBhZGRpdGlvbmFsRmFjZXRWYWx1ZUZpZWxkc1tmaWVsZE5hbWVdKVxuICAgICAgICApLFxuICAgICAgICAuLi5yZXN0XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICAuLi5hY2MsXG4gICAgICBbZmllbGROYW1lXTogYWRhcHRlZEZhY2V0XG4gICAgfTtcbiAgfSwge30pO1xufVxuXG5mdW5jdGlvbiBsaW1pdFRvMTAwcGFnZXModG90YWxQYWdlcykge1xuICAvLyBXZSBsaW1pdCB0aGlzIHRvIDEwMCBwYWdlcyBzaW5jZSBBcHAgU2VhcmNoIGN1cnJlbnRseSBjYW5ub3QgcGFnZSBwYXN0IDEwMCBwYWdlc1xuICByZXR1cm4gTWF0aC5taW4odG90YWxQYWdlcywgMTAwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkYXB0UmVzcG9uc2UocmVzcG9uc2UsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBmYWNldHMgPSByZXNwb25zZS5pbmZvLmZhY2V0cztcbiAgY29uc3QgcmVxdWVzdElkID0gcmVzcG9uc2UuaW5mby5tZXRhLnJlcXVlc3RfaWQ7XG5cbiAgY29uc3QgdG90YWxQYWdlcyA9XG4gICAgcmVzcG9uc2UuaW5mby5tZXRhLnBhZ2UgJiZcbiAgICB0eXBlb2YgcmVzcG9uc2UuaW5mby5tZXRhLnBhZ2UudG90YWxfcGFnZXMgIT09IFwidW5kZWZpbmVkXCJcbiAgICAgID8gbGltaXRUbzEwMHBhZ2VzKHJlc3BvbnNlLmluZm8ubWV0YS5wYWdlLnRvdGFsX3BhZ2VzKVxuICAgICAgOiB1bmRlZmluZWQ7XG5cbiAgY29uc3QgdG90YWxSZXN1bHRzID0gcmVzcG9uc2UuaW5mby5tZXRhLnBhZ2VcbiAgICA/IHJlc3BvbnNlLmluZm8ubWV0YS5wYWdlLnRvdGFsX3Jlc3VsdHNcbiAgICA6IHVuZGVmaW5lZDtcblxuICByZXR1cm4ge1xuICAgIC4uLihmYWNldHMgJiYgeyBmYWNldHM6IGFkYXB0RmFjZXRzKGZhY2V0cywgb3B0aW9ucykgfSksXG4gICAgcmVxdWVzdElkLFxuICAgIHJlc3VsdHM6IHJlc3BvbnNlLnJhd1Jlc3VsdHMsXG4gICAgLi4uKHRvdGFsUGFnZXMgIT09IHVuZGVmaW5lZCAmJiB7IHRvdGFsUGFnZXMgfSksXG4gICAgLi4uKHRvdGFsUmVzdWx0cyAhPT0gdW5kZWZpbmVkICYmIHsgdG90YWxSZXN1bHRzIH0pXG4gIH07XG59XG4iXX0=