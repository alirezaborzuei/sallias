import { removeSingleFilterValue } from "../helpers";
/**
 * Remove filter from results
 *
 * Will trigger new search
 *
 * @param name String field name for filter to remove
 * @param value String (Optional) field value for filter to remove
 * @param type String (Optional) type of filter to remove
 */

export default function removeFilter(name, value, type) {
  var _console;

  if (this.debug) // eslint-disable-next-line no-console
    (_console = console).log.apply(_console, ["Search UI: Action", "removeFilter"].concat(Array.prototype.slice.call(arguments)));
  var filters = this.state.filters;
  var updatedFilters = filters;

  if (!value && type) {
    updatedFilters = filters.filter(function (filter) {
      return !(filter.field === name && filter.type === type);
    });
  } else if (value) {
    updatedFilters = removeSingleFilterValue(filters, name, value, type);
  } else {
    updatedFilters = filters.filter(function (filter) {
      return filter.field !== name;
    });
  }

  this._updateSearchResults({
    current: 1,
    filters: updatedFilters
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hY3Rpb25zL3JlbW92ZUZpbHRlci5qcyJdLCJuYW1lcyI6WyJyZW1vdmVTaW5nbGVGaWx0ZXJWYWx1ZSIsInJlbW92ZUZpbHRlciIsIm5hbWUiLCJ2YWx1ZSIsInR5cGUiLCJkZWJ1ZyIsImNvbnNvbGUiLCJsb2ciLCJhcmd1bWVudHMiLCJmaWx0ZXJzIiwic3RhdGUiLCJ1cGRhdGVkRmlsdGVycyIsImZpbHRlciIsImZpZWxkIiwiX3VwZGF0ZVNlYXJjaFJlc3VsdHMiLCJjdXJyZW50Il0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSx1QkFBVCxRQUF3QyxZQUF4QztBQUVBOzs7Ozs7Ozs7O0FBU0EsZUFBZSxTQUFTQyxZQUFULENBQXNCQyxJQUF0QixFQUE0QkMsS0FBNUIsRUFBbUNDLElBQW5DLEVBQXlDO0FBQUE7O0FBQ3RELE1BQUksS0FBS0MsS0FBVCxFQUNFO0FBQ0EsZ0JBQUFDLE9BQU8sRUFBQ0MsR0FBUixrQkFBWSxtQkFBWixFQUFpQyxjQUFqQyxvQ0FBb0RDLFNBQXBEO0FBSG9ELE1BSzlDQyxPQUw4QyxHQUtsQyxLQUFLQyxLQUw2QixDQUs5Q0QsT0FMOEM7QUFPdEQsTUFBSUUsY0FBYyxHQUFHRixPQUFyQjs7QUFFQSxNQUFJLENBQUNOLEtBQUQsSUFBVUMsSUFBZCxFQUFvQjtBQUNsQk8sSUFBQUEsY0FBYyxHQUFHRixPQUFPLENBQUNHLE1BQVIsQ0FDZixVQUFBQSxNQUFNO0FBQUEsYUFBSSxFQUFFQSxNQUFNLENBQUNDLEtBQVAsS0FBaUJYLElBQWpCLElBQXlCVSxNQUFNLENBQUNSLElBQVAsS0FBZ0JBLElBQTNDLENBQUo7QUFBQSxLQURTLENBQWpCO0FBR0QsR0FKRCxNQUlPLElBQUlELEtBQUosRUFBVztBQUNoQlEsSUFBQUEsY0FBYyxHQUFHWCx1QkFBdUIsQ0FBQ1MsT0FBRCxFQUFVUCxJQUFWLEVBQWdCQyxLQUFoQixFQUF1QkMsSUFBdkIsQ0FBeEM7QUFDRCxHQUZNLE1BRUE7QUFDTE8sSUFBQUEsY0FBYyxHQUFHRixPQUFPLENBQUNHLE1BQVIsQ0FBZSxVQUFBQSxNQUFNO0FBQUEsYUFBSUEsTUFBTSxDQUFDQyxLQUFQLEtBQWlCWCxJQUFyQjtBQUFBLEtBQXJCLENBQWpCO0FBQ0Q7O0FBRUQsT0FBS1ksb0JBQUwsQ0FBMEI7QUFDeEJDLElBQUFBLE9BQU8sRUFBRSxDQURlO0FBRXhCTixJQUFBQSxPQUFPLEVBQUVFO0FBRmUsR0FBMUI7QUFJRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbW92ZVNpbmdsZUZpbHRlclZhbHVlIH0gZnJvbSBcIi4uL2hlbHBlcnNcIjtcblxuLyoqXG4gKiBSZW1vdmUgZmlsdGVyIGZyb20gcmVzdWx0c1xuICpcbiAqIFdpbGwgdHJpZ2dlciBuZXcgc2VhcmNoXG4gKlxuICogQHBhcmFtIG5hbWUgU3RyaW5nIGZpZWxkIG5hbWUgZm9yIGZpbHRlciB0byByZW1vdmVcbiAqIEBwYXJhbSB2YWx1ZSBTdHJpbmcgKE9wdGlvbmFsKSBmaWVsZCB2YWx1ZSBmb3IgZmlsdGVyIHRvIHJlbW92ZVxuICogQHBhcmFtIHR5cGUgU3RyaW5nIChPcHRpb25hbCkgdHlwZSBvZiBmaWx0ZXIgdG8gcmVtb3ZlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbW92ZUZpbHRlcihuYW1lLCB2YWx1ZSwgdHlwZSkge1xuICBpZiAodGhpcy5kZWJ1ZylcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUubG9nKFwiU2VhcmNoIFVJOiBBY3Rpb25cIiwgXCJyZW1vdmVGaWx0ZXJcIiwgLi4uYXJndW1lbnRzKTtcblxuICBjb25zdCB7IGZpbHRlcnMgfSA9IHRoaXMuc3RhdGU7XG5cbiAgbGV0IHVwZGF0ZWRGaWx0ZXJzID0gZmlsdGVycztcblxuICBpZiAoIXZhbHVlICYmIHR5cGUpIHtcbiAgICB1cGRhdGVkRmlsdGVycyA9IGZpbHRlcnMuZmlsdGVyKFxuICAgICAgZmlsdGVyID0+ICEoZmlsdGVyLmZpZWxkID09PSBuYW1lICYmIGZpbHRlci50eXBlID09PSB0eXBlKVxuICAgICk7XG4gIH0gZWxzZSBpZiAodmFsdWUpIHtcbiAgICB1cGRhdGVkRmlsdGVycyA9IHJlbW92ZVNpbmdsZUZpbHRlclZhbHVlKGZpbHRlcnMsIG5hbWUsIHZhbHVlLCB0eXBlKTtcbiAgfSBlbHNlIHtcbiAgICB1cGRhdGVkRmlsdGVycyA9IGZpbHRlcnMuZmlsdGVyKGZpbHRlciA9PiBmaWx0ZXIuZmllbGQgIT09IG5hbWUpO1xuICB9XG5cbiAgdGhpcy5fdXBkYXRlU2VhcmNoUmVzdWx0cyh7XG4gICAgY3VycmVudDogMSxcbiAgICBmaWx0ZXJzOiB1cGRhdGVkRmlsdGVyc1xuICB9KTtcbn1cbiJdfQ==