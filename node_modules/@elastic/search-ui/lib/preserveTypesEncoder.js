"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function isTypeNumber(value) {
  return value !== undefined && value !== null && typeof value === "number";
}

function isTypeBoolean(value) {
  return value && typeof value === "boolean";
}

function toBoolean(value) {
  if (value === "true") return true;
  if (value === "false") return false;
  throw "Invalid type parsed as Boolean value";
}
/* Encoder for qs library which preserve number types on the URL. Numbers
are padded with "n_{number}_n", and booleans with "b_{boolean}_b"*/


var _default = {
  encode: function encode(value, _encode) {
    if (isTypeNumber(value)) {
      return "n_".concat(value, "_n");
    }

    if (isTypeBoolean(value)) {
      return "b_".concat(value, "_b");
    }

    return _encode(value);
  },
  decode: function decode(value, _decode) {
    //eslint-disable-next-line
    if (/n_-?[\d\.]*_n/.test(value)) {
      var numericValueString = value.substring(2, value.length - 2);
      return Number(numericValueString);
    }

    if (/^b_(true|false)*_b$/.test(value)) {
      var booleanValueString = value.substring(2, value.length - 2);
      return toBoolean(booleanValueString);
    }

    return _decode(value);
  }
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wcmVzZXJ2ZVR5cGVzRW5jb2Rlci5qcyJdLCJuYW1lcyI6WyJpc1R5cGVOdW1iZXIiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsImlzVHlwZUJvb2xlYW4iLCJ0b0Jvb2xlYW4iLCJlbmNvZGUiLCJkZWNvZGUiLCJ0ZXN0IiwibnVtZXJpY1ZhbHVlU3RyaW5nIiwic3Vic3RyaW5nIiwibGVuZ3RoIiwiTnVtYmVyIiwiYm9vbGVhblZhbHVlU3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsU0FBU0EsWUFBVCxDQUFzQkMsS0FBdEIsRUFBNkI7QUFDM0IsU0FBT0EsS0FBSyxLQUFLQyxTQUFWLElBQXVCRCxLQUFLLEtBQUssSUFBakMsSUFBeUMsT0FBT0EsS0FBUCxLQUFpQixRQUFqRTtBQUNEOztBQUVELFNBQVNFLGFBQVQsQ0FBdUJGLEtBQXZCLEVBQThCO0FBQzVCLFNBQU9BLEtBQUssSUFBSSxPQUFPQSxLQUFQLEtBQWlCLFNBQWpDO0FBQ0Q7O0FBRUQsU0FBU0csU0FBVCxDQUFtQkgsS0FBbkIsRUFBMEI7QUFDeEIsTUFBSUEsS0FBSyxLQUFLLE1BQWQsRUFBc0IsT0FBTyxJQUFQO0FBQ3RCLE1BQUlBLEtBQUssS0FBSyxPQUFkLEVBQXVCLE9BQU8sS0FBUDtBQUN2QixRQUFNLHNDQUFOO0FBQ0Q7QUFFRDs7OztlQUdlO0FBQ2JJLEVBQUFBLE1BRGEsa0JBQ05KLEtBRE0sRUFDQ0ksT0FERCxFQUNTO0FBQ3BCLFFBQUlMLFlBQVksQ0FBQ0MsS0FBRCxDQUFoQixFQUF5QjtBQUN2Qix5QkFBWUEsS0FBWjtBQUNEOztBQUNELFFBQUlFLGFBQWEsQ0FBQ0YsS0FBRCxDQUFqQixFQUEwQjtBQUN4Qix5QkFBWUEsS0FBWjtBQUNEOztBQUNELFdBQU9JLE9BQU0sQ0FBQ0osS0FBRCxDQUFiO0FBQ0QsR0FUWTtBQVViSyxFQUFBQSxNQVZhLGtCQVVOTCxLQVZNLEVBVUNLLE9BVkQsRUFVUztBQUNwQjtBQUNBLFFBQUksZ0JBQWdCQyxJQUFoQixDQUFxQk4sS0FBckIsQ0FBSixFQUFpQztBQUMvQixVQUFNTyxrQkFBa0IsR0FBR1AsS0FBSyxDQUFDUSxTQUFOLENBQWdCLENBQWhCLEVBQW1CUixLQUFLLENBQUNTLE1BQU4sR0FBZSxDQUFsQyxDQUEzQjtBQUNBLGFBQU9DLE1BQU0sQ0FBQ0gsa0JBQUQsQ0FBYjtBQUNEOztBQUNELFFBQUksc0JBQXNCRCxJQUF0QixDQUEyQk4sS0FBM0IsQ0FBSixFQUF1QztBQUNyQyxVQUFNVyxrQkFBa0IsR0FBR1gsS0FBSyxDQUFDUSxTQUFOLENBQWdCLENBQWhCLEVBQW1CUixLQUFLLENBQUNTLE1BQU4sR0FBZSxDQUFsQyxDQUEzQjtBQUNBLGFBQU9OLFNBQVMsQ0FBQ1Esa0JBQUQsQ0FBaEI7QUFDRDs7QUFDRCxXQUFPTixPQUFNLENBQUNMLEtBQUQsQ0FBYjtBQUNEO0FBckJZLEMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc1R5cGVOdW1iZXIodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiO1xufVxuXG5mdW5jdGlvbiBpc1R5cGVCb29sZWFuKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09IFwiYm9vbGVhblwiO1xufVxuXG5mdW5jdGlvbiB0b0Jvb2xlYW4odmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSBcInRydWVcIikgcmV0dXJuIHRydWU7XG4gIGlmICh2YWx1ZSA9PT0gXCJmYWxzZVwiKSByZXR1cm4gZmFsc2U7XG4gIHRocm93IFwiSW52YWxpZCB0eXBlIHBhcnNlZCBhcyBCb29sZWFuIHZhbHVlXCI7XG59XG5cbi8qIEVuY29kZXIgZm9yIHFzIGxpYnJhcnkgd2hpY2ggcHJlc2VydmUgbnVtYmVyIHR5cGVzIG9uIHRoZSBVUkwuIE51bWJlcnNcbmFyZSBwYWRkZWQgd2l0aCBcIm5fe251bWJlcn1fblwiLCBhbmQgYm9vbGVhbnMgd2l0aCBcImJfe2Jvb2xlYW59X2JcIiovXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZW5jb2RlKHZhbHVlLCBlbmNvZGUpIHtcbiAgICBpZiAoaXNUeXBlTnVtYmVyKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGBuXyR7dmFsdWV9X25gO1xuICAgIH1cbiAgICBpZiAoaXNUeXBlQm9vbGVhbih2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBgYl8ke3ZhbHVlfV9iYDtcbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZSh2YWx1ZSk7XG4gIH0sXG4gIGRlY29kZSh2YWx1ZSwgZGVjb2RlKSB7XG4gICAgLy9lc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICBpZiAoL25fLT9bXFxkXFwuXSpfbi8udGVzdCh2YWx1ZSkpIHtcbiAgICAgIGNvbnN0IG51bWVyaWNWYWx1ZVN0cmluZyA9IHZhbHVlLnN1YnN0cmluZygyLCB2YWx1ZS5sZW5ndGggLSAyKTtcbiAgICAgIHJldHVybiBOdW1iZXIobnVtZXJpY1ZhbHVlU3RyaW5nKTtcbiAgICB9XG4gICAgaWYgKC9eYl8odHJ1ZXxmYWxzZSkqX2IkLy50ZXN0KHZhbHVlKSkge1xuICAgICAgY29uc3QgYm9vbGVhblZhbHVlU3RyaW5nID0gdmFsdWUuc3Vic3RyaW5nKDIsIHZhbHVlLmxlbmd0aCAtIDIpO1xuICAgICAgcmV0dXJuIHRvQm9vbGVhbihib29sZWFuVmFsdWVTdHJpbmcpO1xuICAgIH1cbiAgICByZXR1cm4gZGVjb2RlKHZhbHVlKTtcbiAgfVxufTtcbiJdfQ==